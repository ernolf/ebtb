__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${BUTTON_BASHLIB:-_} && return
BUTTON_BASHLIB=:

# TODO 0 -->
. <(lrequire binaries)
. <(lrequire ansi)
. <(lrequire basics)
# TODO 0 <--
buttonize(){
    local oldcolor
    oldcolor="$(q2 ${X[cat]} ${F[color]})"
    GRAYbg
    printf '%s' '['
    case $1 in
        OK) GGRAYbg
            ;;
       NOK) RGRAYbg
    esac
    printf '%s' "$2"
    GRAYbg
    printf '%s' ']'
    ${oldcolor:-N}
}

button(){
    case ${1,,} in
  not|no|q) buttonize NOK "$1"
            ;;
         *) buttonize OK "$1"
    esac
}

box(){
    case ${1,,} in
  not|no|q) buttonize NOK " $1 "
            ;;
         *) buttonize OK " $1 "
    esac
}

# TODO 1 -->
#check(){
#    [[ " OK NOK " =~ " $1 " ]]||return
#    case $1 in
#        OK) buttonize OK '✔️'
#            ;;
#       NOK) buttonize NOK '✖️'
#    esac
#}

# TODO 1 <--
check(){
    [[ " OK NOK " =~ " $1 " ]] || return
    local ok nok
    if ${X[grep]} -qs "webmin.service" /proc/self/cgroup; then
        ok='✔' nok='✘'
# TODO 2 -->
#        ok='✓' nok='✗'
#        ok="+" nok="-"
# TODO 2 <--
    else
# TODO 3 -->
#        ok='✅' nok='❌'
# TODO 3 <--
        ok='✔️' nok='✖️'
    fi
    case $1 in
        OK) buttonize OK "$ok"
            ;;
       NOK) buttonize NOK "$nok"
    esac
}
