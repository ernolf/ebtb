__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${NC_NEXTCLOUD_BASHLIB:-_} && return
NC_NEXTCLOUD_BASHLIB=:

. <(lrequire php/version)
. <(lrequire nc/aio)
. <(lrequire nc/c2j)

[[ -f ${F[nc]:=${D[vt]}/nc} ]] && . ${F[nc]}

if ${B[firstrun]:-_}; then
    [[ -f ${F[nc]:-} ]] && > "${F[nc]}"
    . <(req nc/first_run)
    first_run
fi

if [[ -n ${NC[u]} && ${I[un]} != ${NC[u]} && ${I[u]} != 0 ]]; then
    su_do "u=NC_USER"
fi

[[ $(q2 declare -p NC) =~ 'declare -A' ]] || { declare -gA NC 2>$NUL || declare -A NC; }

if [[ -z "${NC[d]}" || -z "${NC[cd]}" || -z "${NC[dd]}" || -z "${NC[du]}" || -z "${NC[dg]}" || -z "${NC[u]}" || -z "${NC[g]}" || -z "${NC[vphp]}" ]]; then
    if ${B[aio]}; then
        NC[d]="/var/lib/docker/volumes/nextcloud_aio_nextcloud/_data"
        NC[cd]="${NC[d]}/config" # NC_CDIR
        NC[dd]="/var/lib/docker/volumes/nextcloud_aio_nextcloud_data/_data"
    else
        q0 declare -p NC_DIR && [[ -d $NC_DIR && ! -d ${NC[d]} ]] && NC[d]=$NC_DIR

        # detect location of config.php
        if [ -d "${NC[d]}" ]; then
            NC[du]=$(${X[stat]} -c %U ${NC[d]} 2> >(log_trace))
            NC[dg]=$(${X[stat]} -c %G ${NC[d]} 2> >(log_trace))
            if cd ${NC[d]} 2> >(log_trace); then
                NC[cd]=$(${X[php]} -r 'require_once "lib/base.php"; OC::initPaths(); echo rtrim(OC::$configDir, "/");' 2> >(log_trace))
                cd
                [[ -n ${NC[cd]} && -d ${NC[cd]} ]] || NC[cd]="${NC[d]}/config"
                # pick out NC[u]
                if (( $(${X[stat]} -c %u ${NC[cd]}/config.php 2> >(log_trace)) )); then
                    NC[u]="$(${X[stat]} -c %U ${NC[cd]}/config.php 2> >(log_trace))"
                    NC[g]="$(${X[stat]} -c %G ${NC[cd]}/config.php 2> >(log_trace))"
                fi
            elif [[ "${NC[du]}" = root && "${NC[dg]}" != root ]]; then
                NC[u]=${NC[dg]}
            fi
        fi

        # if NC[u] and/or NC[g] still unknown, try these fallbacks:
        [ -n "${NC[u]}" ] || NC[u]="$(${X[ps]} -o user $(${X[pgrep]} -f "php|apache2|httpd|nginx") | ${X[gawk]} 'NR>1' | ${X[sort]} -u | ${X[grep]} -v root)"
        [ -n "${NC[g]}" ] || NC[g]="$(${X[ps]} -o group $(${X[pgrep]} -f "php|apache2|httpd|nginx") | ${X[gawk]} 'NR>1' | ${X[sort]} -u | ${X[grep]} -v root)"
        [ -n "${NC[u]}" ] || NC[u]="$(q2 ${X[apache2ctl]} -S | ${X[gawk]} -F '[" ]' '/User:/ { print $3 }')"
        [ -n "${NC[g]}" ] || NC[g]="$(q2 ${X[apache2ctl]} -S | ${X[gawk]} -F '[" ]' '/Group:/ { print $3 }')"

        # only load firstrun module if needed
        if [ ! -d "${NC[d]}" ]; then
            . <(req nc/first_run)
            first_run
        elif [[ "${I[un]}" != "${NC[u]}" && ! -r "${NC[d]}" ]]; then
            su_do "u=NC_USER"
        elif [ ! -r "${NC[d]}/lib/base.php" ]; then
            . <(req nc/first_run)
            first_run
        fi

        if [ -z "${NC[dd]}" ]; then
            if nc_configkey_exist_ datadirectory; then
                NC[dd]="$(nc_configkey datadirectory)"
            elif [ -d "${NC[d]}/data" ]; then
                NC[dd]="${NC[d]}/data"
            else
                NC[dd]=""
            fi
        fi
    fi
    NC[vphp]="${NC[d]}/version.php"
fi

q0 declare -p NC_DIR && [[ $NC_DIR != ${NC[d]} ]] && ${B[rt]} && setvdir v "${NC[d]}"

[ -n "${NC[github_raw]}" ] || NC[github_raw]='https://raw.githubusercontent.com/nextcloud'

mh $(declare -p NC | ${X[tee]} "${F[nc]}")
${X[chown]} "${NC[u]}":"${NC[g]}" "${F[nc]}"
${X[chmod]} 666 "${F[nc]}"

