__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${FIRST_RUN_BASHLIB:-false} && return
FIRST_RUN_BASHLIB=:

. <(lrequire sudo)
. <(lrequire button)
. <(lrequire anykey)
. <(lrequire vdir)
. <(lrequire httpd)
. <(lrequire ask)

first_run(){
    te1

    complete(){
        mh "vdir: $1" &
        setvdir v "$1"
        f
        o2; echo "- $(lG)first run wizard completed successfully."; N
        f
        $me "json=$my_json" $my_args
        exit 0
    }

    local p h
    local -l ans num
    local -i c2=9 i n=1
    h="$(box h) to enter path by hand or $(q2q)"
    if (( $(id -u) )) && [ -d "$NC_DIR" ]; then
        su_root "to run this script"
    fi
    if ! $irun2; then
        f
        o2; GRAY; echo "This step is required once after a new installation or sometimes after an update:"; N
    fi
    su_root "for the first run wizard" irun2
    populate_httpd_ nc-dir
    f
    o2; B; echo "Hello, this is the first run wizard of \"$(Y)$me$(B)\""
    if (( ${#HTTPD_NC_DIR[@]} == 1 )); then
        p="${HTTPD_NC_DIR[0]}"
        o2; echo "nextcloud installation detected in $(C)$p"; N
        o2; printf "is that correct $(box Y) / $(box n) ($(GRAY)or $(q2q; N)) "
        while :; do
            read -rsn 1 ans; te1
            case ${ans:-y} in
                q)  exit 0
                    ;;
                y)  complete "$p"
                    ;;
                n)  break
                    ;;
                *)  printf "$invi Please enter $(box y), $(box n) or $(q2q) "
            esac
        done
    elif (( ${#HTTPD_NC_DIR[@]} > 1 )); then
        line '=' P 2/78 b1
        o3; B; echo "Detected nextcloud installations"
        o4; Y; echo "Num$(o $c2)Directory"
        line '-' P 2/78
        for i in "${!HTTPD_NC_DIR[@]}"; do
            p="${HTTPD_NC_DIR[i]}"
            o3; echo "- $((n+i))$(o $c2)$p"
        done
        line '-' P 2/78 a2
        o2; printf "Enter the corresponding number, $h"
        while :; do
            read -rsn 1 num
            te1
            case $num in
                q)  exit 0
                    ;;
                h)  break
                    ;;
            [1-9])  (( num < n || num >= (n+${#HTTPD_NC_DIR[@]}) )) && {
                        printf "$(o2)Invalid number. Please choose a number from the list, $h"
                        continue
                    }
                    i="$((num-n))"
                    p="${HTTPD_NC_DIR[i]}"
                    o2; echo "Your choice: \"$(C)$p$(N)\""
                    f
                    o2; echo "is this the right Nextcloud installation path?"
                    o2; echo "Press $(box y) for yes, $(box n) for no, $(box h) enter path by hand or $(q2q): "
                    while :; do
                        read -rsn 1 ans
                        te1
                        case $ans in
                            q)  exit 0
                                ;;
                            h)  break
                                ;;
                            n)  continue
                                ;;
                            y)  complete "$p"
                                ;;
                            *)  printf "$invi Please enter $(box y), $(box n), $(box h) or $(q2q) "
                        esac
                    done
                    ;;
                *)  o2
                    printf "$invi Please enter a valid number, $h"
                    continue
            esac
        done
    fi
    while :; do
        o2; echo "enter the directory where your Nextcloud is installed ($(C)or $(q2q; N)):"; N
        read -rp "  --> " p
        te1
        [ "${p,}" = "q" ] && exit 0
        [ -f "$p/occ" ] && complete "$p" || echo "$(Pbg)  * I can not detect a Nextcloud installation in \"$p\" $(N)"
    done
}
# COMMENT -->
#    [ -r "$NC_DIR/lib/base.php" ] || first_run
