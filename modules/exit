__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${EXIT_BASHLIB:-false} && return 0 || {
    EXIT_BASHLIB=:

    . <(require basics)
    . <(require ansi)

    exit0(){
        G; echo "exiting script."
        N; exit 0
    }

    exit1(){
        R; echo "exitingâ€¦"
        N; exit 1
    }

    # define a trap to clean up the temporary file
    exit_trap(){
        [ -f "$spinner_pid_file" ] && kill_spinner
        ${local_server:-false}&&ls_ stop
        nonullglob "$TMPDIR/${bm}$$_*" && (rm -f $TMPDIR/${bm}$$_*) 2>/dev/null
        nonullglob "$TMPDIR/${bm:-$$}_*" && (rm -f $TMPDIR/${bm:-$$}_*) 2>/dev/null
        ansi_reset
    }

    interrupted(){
        if [ -z "$bm" ]; then
            return 0
        else
            te1; Yi; echo "TRAP: interrupted by sig$1"
            if [ -f "$spinner_pid_file" ]; then
                te1; Yi; echo "TRAP: - spinner killed"
            fi
            if nonullglob "$TMPDIR/${bm}_*"; then
                te1; Yi; echo "TRAP: - temporary files removed"
            fi
            exit1
        fi
    }

    trap 'exit_trap' EXIT
    trap 'interrupted INT' INT
    trap 'interrupted TERM' TERM

}
