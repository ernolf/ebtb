__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${EXIT_BASHLIB:-_} && return
EXIT_BASHLIB=:

# TODO 0 -->
. <(lrequire binaries)
. <(lrequire basics)
. <(lrequire ansi)
# TODO <-- 0
. <(lrequire debug)

exit0(){
    mh "exit: 0"
    G; echo "exiting script."; N
    echo "generous? feedback? questions? run: '$ME --contribute'"; N
    exit 0
}

exit1(){
    mh "exit: 1"
    R; echo "exitingâ€¦"; N
    exit 1
}

cleanup(){
    local garbage
    for garbage in "$@"; do
        [ -d "$garbage" ] && q2 ${X[rm]} -fr "$garbage"
        [ -f "$garbage" ] && q2 ${X[rm]} -f "$garbage"
    done
}

# define a trap to clean up the lock- and temporary files
exit_trap(){
    [ -f "$spinner_pid_file" ] && kill_spinner
    ${local_server:-_} && ls_ stop
    cleanup "${D[lock]}"
    nonullglob "$TMPDIR/${bm}$$_*" && q2 ${X[rm]} -f $TMPDIR/${bm}$$_*
    nonullglob "$TMPDIR/${bm:-$$}_*" && q2 ${X[rm]} -f $TMPDIR/${bm:-$$}_*
    ansi_reset
}

interrupted(){
    if [ -z "${M[b]}" ]; then
        return 0
    else
        te1; Yi; echo "TRAP: interrupted by sig$1"
        if [ -f "$spinner_pid_file" ]; then
            te1; Yi; echo "TRAP: - spinner killed"
        fi
        if nonullglob "$TMPDIR/${bm}_*"; then
            te1; Yi; echo "TRAP: - temporary files removed"
        fi
        exit1
    fi
}

trap 'exit_trap' EXIT
trap 'interrupted INT' INT
trap 'interrupted TERM' TERM
