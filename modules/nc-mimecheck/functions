__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${FUNCTIONS_BASHLIB:-_} && return
FUNCTIONS_BASHLIB=:

. <(lrequire binaries)
. <(lrequire verbose)
. <(lrequire nc/nextcloud)

# wrong_option -r "string"
wrong_option(){
    local -i i
    local -a a
    # -r registrate wrong option in array for later echo
    if [ "$1" = "-r" ]; then
        shift
        woa[$woi]="$@"
        woi=$((woi+1))
    # -x echo all gathered errors together, show help and exit
    elif [ "$1" = "-x" -a $woi -gt 0 ]; then
        ${B[quiet]} && exit 1
        for i in $(${X[seq]} 0 $((woi-1))); do
            IFS="#" read -ra a <<< ${woa[$i]}
            if [ ${#a[*]} -ne 0 ]; then
                f
                R; echo "OPTION: $((i+1)): ${a[0]}">&2
                echo "           ${a[1]}">&2; N
            else
                f
                R; echo "OPTION: $((i+1)): ${woa[$i]}">&2; N
            fi
        done
        try_help
    # no -r, no -x echo error, show help and exit
    elif [ "${1:0:1}"  != "-" ]; then
        f
        R; echo "OPTION: $*">&2; N
        try_help
    fi
    return 0
}

# main file=1 regex=2 exension=3 mimetype=4
main(){
    required_args 4 "$@"
    local -i i=1
    v_echo "$4$(o 26)=>  ${1##*/}"
    if ! echo "$1" | ${X[grep]} -iE $grepopts "$2"; then
        ${B[quiet]} || echo "detected mimetype of ${1##*/} is $4"
        ${B[dryrun]} || ${X[mv]} "$1" "$(echo "$1"|${X[sed]} 's/\..\{1,5\}$//')$3"
        do_occ_filesscan set :
        ${B[quiet]} || echo "$(G)moved $(xGRAY)${1##*/}$(N)"
        ${B[quiet]} || echo "$(G)   to $(P)$(echo "${1##*/}"|${X[sed]} 's/\..\{1,5\}$//')$(Pbg)$3$(N)"
        i=0
    fi
    return $i
}

# scan_dir dir=1
scan_dir(){
    require_arg "$@"
    local -i i ret
    local filepath mimetype extension
    i=255 ret=1
    for filepath in "$1"/*; do
        [ -f "$filepath" ] || continue
        mimetype="$($mimedetector "$filepath")"
        echo "${mime_ext_regex_array[@]%%:*}" | ${X[grep]} -qsw "$mimetype" || continue
        extension="$(a_fld mime_ext_regex_array ':' "$mimetype" 2)"
        regex="$(a_fld mime_ext_regex_array ':' "$mimetype" 3)"
        main "$filepath" "$regex" "$extension" "$mimetype"
        ret=$?
        (($i)) && i=$ret
    done
    return $i
}
