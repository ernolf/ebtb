__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${LAST_BASHLIB:-_} && return
LAST_BASHLIB=:

. <(lrequire nc/nextcloud_db)

nc_last(){
    q0 database_call
    local query

    group_query(){
        case $DB_TYPE in
         my) echo "
            SELECT $1.uid,
                COALESCE($DB_U2T(CAST(p.configvalue AS integer)), 'never') AS last_login
            FROM $DB_PREF$1 $1
            LEFT JOIN ${DB_PREF}preferences p ON $1.uid = p.userid AND p.appid = 'login'"
            ;;
         pg) echo "
            SELECT $1.uid,
                CASE WHEN p.configvalue = 'never' THEN NULL
                ELSE $DB_U2T(CAST(p.configvalue AS integer))
                END AS last_login
            FROM $DB_PREF$1 $1
            LEFT JOIN ${DB_PREF}preferences p ON $1.uid = p.userid AND p.appid = 'login'"
        esac
    }

    if is_app_enabled guests; then
        query="
        SELECT uid, last_login
        FROM ($(group_query users)
        UNION ALL$(group_query guests_users)
        ) combined
        ORDER BY
            CASE WHEN last_login = 'never' THEN 1 ELSE 0 END, last_login DESC"
    else
        query="$(group_query users)
        ORDER BY
            CASE WHEN p.configvalue IS NULL THEN 1 ELSE 0 END, p.configvalue DESC"
    fi
    if ${B[trace]:-_}; then
        echo "==TRACE=start=" >/dev/tty
        print_funcname >/dev/tty
        echo -n "global bool values  -" >/dev/tty
        local iter
        for iter in ${!B[@]}; do echo -n " $iter=${B[$iter]}" >/dev/tty; done; echo >/dev/tty
        unset -v iter
        echo "Database Backend: ${DB_TYPE}sql" >/dev/tty
        echo "==TRACE=end===" >/dev/tty
        echo "----------" >/dev/tty
        echo "SQL QUERY:" >/dev/tty
        echo "----------$query;" >/dev/tty
        echo "----------" >/dev/tty
    else
        db_exec_ "$query"
    fi
}
