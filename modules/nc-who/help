__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${HELP_BASHLIB:-_} && return
HELP_BASHLIB=:

# TODO 0 -->
. <(lrequire nc/logo)
# TODO <-- 0
print_help(){
    local s
    local -A bool
    if (($(backups | ${X[wc]} -l))); then
        bool[bak]=:
        r_b(){ echo -e "\n    $ME restore_backup"; }
        [ $(backups | ${X[wc]} -l) -gt 1 ] && s=s || s=''
    else
        r_b(){ :; }
    fi
    ${X[cat]} <<HELP
$(nextcloud_logo)

 $(line = P 81)
  $(Bi)This is the help page of $ME
 $(line = dP 81)

  $(GRAY)You can call

    $(N)$ME --contribute

  $(GRAY).. for information about how you can contribute to the project.

  $(W)Good luck!
  $(W)ernolf

 $(line = P 81)

  $ME - version ${M[v]} ${V[upinf]}

  This utility is similar to the Unix \`who\` command, allowing you to monitor
  live user logins and activities on your nextcloud server-instance.
  The scriptâ€™s activity is logged for reference. You can view this log under:
  - $(C)${F[log]}$(N)

  Usage:
    $ME -h|--help
    $ME monitor [--trace]
    $ME last [--trace]
    $ME integrity_check$(r_b)

  Options:

    -h|--help       Display this help message.

    monitor     Monitor live user logins, ordered by last activity at an
                adjustable refresh rate.
                * Login status is only available for cookie-based sessions
                  on a web frontend.
                * Last activity is shown for all clients.

    last        List users sorted by their last login time. This is equivalent
                to the output of \`occ user:lastseen --all\`
                * \`--all\` is actually not available for that occ command.

    --trace     In combination with:
                  - monitor: produce extensive log traces
                  - last:    print the sql query used for the output

    integrity_check
                Verify the integrity of this script with signature

HELP
    ${bool[bak]:-_} && ${X[cat]}<<BACKUP; exit 0
    restore_backup
                restore an older version of this script from backup
                ($(backups|${X[wc]} -l) backup$s available, you must be root)

BACKUP
}
