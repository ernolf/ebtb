__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${PECL_BASHLIB:-false} && return
PECL_BASHLIB=:

. <(lrequire binaries)
. <(lrequire exit)

pecl_download(){
    local chan download_output file_name
    if (( $# )); then
        chan="$1"
    else
        chan="$module"
    fi

    ${BINARIES[pecl]} channel-update pecl.php.net

    download_output=$(${BINARIES[pecl]} download $chan 2>&1)
    file_name=$(echo "$download_output" | ${BINARIES[grep]} -oP '(?<=File ).*(?= downloaded)' | ${BINARIES[xargs]} ${BINARIES[basename]})

    if [ -f "$file_name" ]; then
        lG; echo "- download of $file_name successfull"
    else
        R; echo "- download of $file_name failed"
        exit1
    fi

    if ${BINARIES[tar]} -xzf $file_name; then
        B; echo "- entering directory \"${file_name%.*}\""
        cd ${file_name%.*}
    else
        R; echo "- unpacking failed"
        exit1
    fi
    N
}
