__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${COMMANDS_INSTALL_OVERWRITE_BASHLIB:-_} && return
COMMANDS_INSTALL_OVERWRITE_BASHLIB=:

install_overwrite(){
    list_apps_4_array(){
        local app xml_f max
        for app in $(occ app:list --shipped=false --output=json | ${X[jq]}  -r '.enabled | keys | sort []'); do
            xml_f="$NC_DIR/apps/$app/appinfo/info.xml"
            max=$(${X[xmls]} -v "//nextcloud/@max-version" "$xml_f" | ${X[sed]} '2,$d')
            if [ -z "$max" ] || (( ${max%%.*} >= ${V[nc_version]%%.*} )); then
                continue
            fi
            echo "$app" >> $1
        done
        unset -v app xml_f max
    }
    replace_array(){
        if nc_configkey_exist_ "'app_install_overwrite'"; then
            if (( counter )); then
                ${X[sed]} $@ "/'app_install_overwrite' =>/,/\(\],\|),\)/c\\" -e "$aioa" $configfile
            else
                ${X[sed]} $@ "/'app_install_overwrite' =>/,/\(\],\|),\)/d" "$configfile"
            fi
        else
            ${X[sed]} $@ '$s/^);$/'"$aioa"'\n&/' "$configfile"
        fi
    }

    [ "$1" = "-u" ] && do_update_ $2 --all

    local file configfile app array_content apps_in_array_tf aioa
    local -i counter job_id c2 c3 c4
    configfile="$NC_CDIR/config.php"
    counter=0 c2=8 c3=24 c4=30

#    if ${X[grep]} -qsw "'app_install_overwrite'" $NC_CDIR/*config.php; then
    if nc_configkey_exist_ "'app_install_overwrite'"; then
        for file in $NC_CDIR/*config.php; do
            if [ "$file" = "$configfile" ]; then
                continue
            elif ${X[grep]} -qs "[[:space:]]*'app_install_overwrite'" $file; then
                configfile="$file"
                break
            fi
        done
    fi
    unset -v file

    GRAY; echo ". . . . . . . .  building  new  'app_install_overwrite'  array  . . . . . . . .";N
    spinner &
    apps_in_array_tf="$(tf)"
    list_apps_4_array "$apps_in_array_tf" & job_id=$!
    wait $job_id
    while read -r app; do
        array_content+="    $counter => '$app',\\n"
        ((counter++))
    done < $apps_in_array_tf
    kill_spinner
    # Create the array content with proper formatting
    aioa=$(printf "  'app_install_overwrite' =>\\\\n  array (\\\\n%s  )," "$array_content")
    unset -v app s_pid job_id apps_in_array_tf array_content

    if  nc_configkey_exist_ "'app_install_overwrite'" || ((counter)); then
        # old config
        line '-' GRAY 80

        o2; GRAY; echo "old:$(f;o $c2)- config-file$(o $c3)-->$(o $c4)$configfile"
        line '-' GRAY 80
        GRAY; echo -n '-->  begin'; line '  -->' GRAY 14

        ${X[cat]} $configfile

        GRAY; printf '<--   end '; line '  <--' GRAY 14
        line '=' N 80
        # new config draft
        line '-' GRAY 80
        o2; GRAY; echo "draft: (not yet written to file)$(f;o $c2)- config-file$(o $c3)-->$(o $c4)$configfile"
        line '-' GRAY 80
        GRAY; echo -n '-->  begin'; line '  -->' GRAY 14

        replace_array -e

        GRAY; printf '<--   end '; line '  <--' GRAY 14
        line '=' N 80 a2
        o2; W; echo "Nothing has been written to file yet."
        o2; W; echo "If everything looks as desired and expected and you want to apply the changes"
        o2; W; echo "exactly as shown here, then please enter the entire word $(Gbg)[ yes ]$(W), all other"
        o2; W; read -rp "entries will abort the script and leave your configfile unchanged " choice
        line '=' N 80 b1
        # new config final
        if [ "$choice" = 'yes' ]; then

            replace_array -i -e

            line '-' GRAY 80
            o2; GRAY; echo "new:$(f;o $c2)- config-file$(o $c3)-->$(o $c4)$configfile"
            line '-' GRAY 80
            GRAY; echo -n '-->  begin'; line '  -->' GRAY 14

            ${X[cat]} $configfile

            printf '<--   end '; line '  <--' GRAY 14
            line '=' N 80
            echo -e "=$(o 79)=\n=$(o $c2)Done!$(o 79)=\n=$(o 79)="
        else
            echo -e "=$(o 79)=\n=$(o $c2)Nothing changed, exiting$(o 79)=\n=$(o 79)="
        fi
        line '=' N 80
    else
        pf; echo "No unsupported apps activated and no 'app_install_overwrite' array detected."
        pf; echo "Nothing to ad or to remove."
    fi
}
