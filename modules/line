__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${LINE_BASHLIB:-_} && return
LINE_BASHLIB=:

# TODO 0 -->
. <(lrequire binaries)
. <(lrequire ansi)
# TODO <-- 0
# $1=pattern $2=color $3=(empty spaces/)repetition of pattern((int/)int or 'a' for auto)
# $4 and $5 either a$i or b$i where a is after and b is before
# and $i the amount of empty lines
line(){
    local -A bool
#    [[ "$-" =~ x ]] && { set +x; bool[debugx]=:; } || :
    local p c cp # pattern, color and coolored pattern
    local -i e r a b # empty_spaces, repetition, lines after, lines before
    p="${1:--}" c="${2:-N}" e=0 a=1 b=0
    binaries_is_func_ $c || c='N' # if color does not exist as function, fallback to neutral
    (( $(${X[expr]} ${3:-a} : '.*/.*') )) && e=${3%/*}
    [[ ! ${3:-} || ${3#*/} = 'a' ]] && r=$(( ( $(max_cols) - e ) / ${#p} )) || r=${3#*/}
    shift 3
    # declare the values for 'b'efore and 'a'fter
    while (( $# )); do
        case "${1:0:1}" in
          a|b)  (( ${1:1}1 )) && local ${1:0:1}=${1:1}
                shift
                ;;
            *)  shift
        esac
    done
    f $b # prepend 'b' empty lines
    (( e )) && o $e # offset 'e' empty spaces
    cp="$($c)$p$(N)" # compose colored pattern
    # print the line with the colored pattern
    for ((i=0; i<$r; i++)); do printf '%s' "$cp"; done
    f $a # append 'a' empty lines
#    ${bool[debugx]:-_} && set -x || :
}

separator(){
    local color
    if [[ ${1:-} = '--sanitized' ]]; then
        color=${2:-GRAY}
        line ' -' $color a
    else
        color=${1:-GRAY}
        kill_spinner && te1 && line ' -' $color
    fi
}

separator2(){
    local color
    if [[ ${1:-} = '--sanitized' ]]; then
        color=${2:-GRAY}
        line ' =' $color a
    else
        color=${1:-GRAY}
        kill_spinner && te1 && line ' =' $color
    fi
}

separator3(){
    local color
    if [[ ${1:-} = '--sanitized' ]]; then
        color=${2:-GRAY}
        line - $color a
    else
        color=${1:-GRAY}
        kill_spinner && te1 && line - $color
    fi
}

separator4(){
    local color
    if [[ ${1:-} = '--sanitized' ]]; then
        color=${2:-GRAY}
        line = $color a
    else
        color=${1:-GRAY}
        kill_spinner && te1 && line = $color
    fi
}
