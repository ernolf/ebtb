__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${TEMPFILE_BASHLIB:-false} && return
TEMPFILE_BASHLIB=:

. <(lrequire binaries)

# standard for root:
: "${TMPDIR:=/tmp}"
[[ "$TMPDIR" == '/' || ! -d "$TMPDIR" ]] && TMPDIR='/tmp'
[ -d "$TMPDIR" ] || TMPDIR='/temp'

# unprivileged users need their own writable tmp dir:
if (( $(${BINARIES[id]} -u) )); then
    TMPDIR="${TMPDIR%/}"
    if (( $(${BINARIES[gawk]} -F/ '{print NF-1}' <<< "$TMPDIR") == 1 )) && [ -w "$TMPDIR" ]; then
        TMPDIR="$TMPDIR/user-$(${BINARIES[id]} -u)"
    elif [ ! -w "$TMPDIR" ]; then
        TMPDIR="$(${BINARIES[gawk]} -F/ '{print "/"$2}' <<< "$TMPDIR")/user-$(${BINARIES[id]} -u)"
    fi
    [ -d "$TMPDIR" ] || q0 ${BINARIES[mkdir]} -m 755 "$TMPDIR"
fi
declare ttf
ttf="$(${BINARIES[mktemp]} -p "$TMPDIR")"
if [[ -n "$ttf" && -f "$ttf" ]]; then
    ${BINARIES[rm]} -f -- "$ttf"
else
    echo -e "\e[31mERROR: TMPDIR '$TMPDIR' is not writable by user '$(${BINARIES[id]} -un)'\e[0m" >&2
    [ -t 0 ] || exit 1
fi
unset ttf

# tempfile creation $1=u (--dry-run)
tf(){
    local arg t u='' mode=''
    for arg in $@; do
        case $arg in
            u)  u=u ;;
      666|777)  mode=$arg
        esac
    done
    t="$(${BINARIES[mktemp]} -p $TMPDIR -${u}t ${bm}$$_XXXXXXXXXXXX)"
# TODO 0 -->
#    t="$(${BINARIES[mktemp]} -p $TMPDIR -${u}t ${bm:-$$}_XXXXXXXXXXXX)"
# TODO <-- 0
    if [ -z "$u" ]; then
        if [ -n "$mode" ]; then
            ${BINARIES[chmod]} $mode "$t"
        fi
    fi
    echo "$t"
}
