__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${HTML2TEXT_BASHLIB:-false} || {
    HTML2TEXT_BASHLIB=:

    # for backwards compatibility
    declare -f lrequire &>/dev/null||lrequire(){ require $@;}

    . <(lrequire ansi)

    function pipe_h2t(){ local query psql_fix1 col sed_empty_row psql_fix2 sed_pre_html2text html2text_command
        query="$1\"$2\""
        psql_fix1="tr -d '\n' | sed -e 's/>\s*</></g; s|<p>.*</p>||'"
      # Empty row with one single dash, since completely empty is supressed
    #    local sed_empty_row sed_pre_html2text html2text_command first_line sed_post_html2text watch_command watch_pid key new_rr
    #$(line - NC $((13 + col * 2)) a0)
    echo "tput cols = $(tput cols)"; anykey
        [ ${sharetype} -eq 3 ] && { [ "$USER_ID" = all ] && col=6 || col=5; } || col=7
        sed_empty_row="s|</TH></TR>|</TH></TR><TR><TD>-</TD>$(line '<td></td>' NC $col a0)</TR>|Ig"
        psql_fix2="sed -e 's/<th align=\"center\">/<th>/g; s/<td align=\"left\">/<td>/g; s/<tr valign=\"top\">/<tr>/g'"
        sed_pre_html2text="sed -e 's/_/~/g; s/ /=/g; s/<TABLE=BORDER=/<TABLE BORDER=/Ig'"
    #    html2text_command="html2text -utf8 -width $(($(tput cols)-50))"
        sed_post_html2text='/^\s/! { :a s/([^-|_]|\s)_(_|\|)/\1 \2/g; ta }
                            /_{20,}/ s/_/-/g                           # replace _ with - on line 1 and 3 or 2 and 4
                            1,2 s/^ -/+-/1                             # replace space at begin of line 1 or 2 with +
                            1,2 s/-$/'$(line - NC $((3+col*2)) a0)'+/1 # replace end of line 1 or 2
                            3,4 s/^\|-/+--/1                           # replace begin of line 3 or 4
                            3,4 s/-\|-/--\+--/g                        # build line 3 or 4 crossings
                            3,4 s/-\|$/--+/1                           # replace end of line 3 or 4
                            s/\|/ | /g                                 # add spaces suround |
                            s/_/ /g                                    # or this one (my choice)
                            s/^ \|/|/1                                 # remove empty space from begin of lines
                            s/\| $/|/1                                 # remove empty space at end of line
                            s/~/_/g                                    # change ~ back to underscore
                            s/=/ /g'                                   # change = back to spaces

    #    eval $query | html2text -utf8 -width $(($(tput cols)-80))
    #    eval $query | eval $psql_fix1 | sed -e $sed_empty_row | eval $psql_fix2 | eval $sed_pre_html2text | html2text -utf8 -width 220 | sed -E -e "$sed_post_html2text"
    }

}
