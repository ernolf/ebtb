__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${DISTRIB_BASHLIB:-false} || {
    DISTRIB_BASHLIB=:

    # for backwards compatibility
    declare -f lrequire &>/dev/null||lrequire(){ require $@;}

    . <(lrequire button)
    . <(lrequire exit)
    . <(lrequire anykey)
    . <(lrequire ask)
    . <(lrequire php/versions)
    . <(lrequire dist/os_release)

    call_me(){
        o2;GRAY;echo "You can call this list with:$(o 35;B)$me --list-$1"
        line '-' dP 2/78 a${2:-1}
    }

    no_debianoid(){
        pf; echo "$OS_NAME is not a debian derivative and not (yet) supported by this script."
        ask "$(qpf)proceed in safe mode" $NO && mark_checked unsupported || exit1
    }

    check_debian(){
        list_supported_debian
        call_me debian 2

        os;lB;printf '%s' "This machine is running $(Y)$OS_PRETTY_NAME$(lB), Codename$(dY) $OS_VERSION_CODENAME";lB
        local ver releasedate eos eol ss
        local -l vercode chan
        case $OS_ID in
            debian|raspbian) ver="$OS_VERSION_ID"
            ;;
            *)  [ -n "$OS_DEBIAN_CODENAME" ]&&ver="${DEBIAN_VERSIONS[$OS_DEBIAN_CODENAME]}"||ver="$OS_VERSION_ID"
                echo ", which is"
                case $OS_ID in
                linuxmint)  os;printf '%s' "a version of Linux Mint based on $(Y)Debian GNU/Linux $ver ($OS_DEBIAN_CODENAME)$(lB)" ;;
                        *)  os;printf '%s' "a distribution based on $(Y)Debian GNU/Linux $ver ($OS_DEBIAN_CODENAME)$(lB)"
                esac
        esac
        [ "${OS_VERSION_CODENAME,,}" = 'sid' ]&&ver='sid'||ver="$(printf '%02d' "$ver")"
        read -r vercode chan releasedate eos eol <<<${DEBIAN_VERSIONS_DATA["$ver"]//;/ }
        [[ "$(supported_suites_ debian)" =~ $vercode ]]&&ss="true"||ss="false"
        if [ "$releasedate" = "RR" ] || [ "$releasedate" = "TBA" ]; then
            echo "."
            os;echo "The unstable and testing channels are too new for this script."
            os;echo "You can however continue risk free here to the detailed informations provided."
            os;echo "All other steps may work but have not been tested and therefore been deactivated.";N;f
            force=false
            ask "$(qpf)continue in $(lG)safe mode$(N) now" "$YES" && mark_checked to_new || exit1
        elif [ $today -le $eol ] && $ss; then
            echo ".$(lG) Good!";N
            mark_checked supported sury debian $vercode
        elif [ $today -le $eol ]; then
            echo ", which is"
            os;echo "brand new and supported by this script but there are not (yet) apt repositories"
            os;echo "provided by Ondřej Surý. That will change in future.$(lG) Good!";N
            mark_checked supported
        elif [ $today -gt $eol ]; then
            echo ", which is"
            os;echo "too old and not supported by this script  Please update your system first."
            os;echo "You can however continue risk free here to the detailed informations provided."
            os;echo "All other steps may work but have not been tested and therefore been deactivated.";N;f
            force=false
            ask "$(qpf)continue in $(lG)safe mode$(N) now" "$YES" && mark_checked to_old || exit1
        else
            echo "."
            os;lB;echo "This version was not recognized by the script."
            os;lB;echo "You can however continue risk free here to the detailed informations provided."
            os;echo "All other steps may work but have not been tested and therefore been deactivated.";N;f
            force=false
            ask "$(qpf)continue in $(lG)safe mode$(N) now" "$YES" && mark_checked unknown || exit1
        fi

    }


    check_ubuntu(){
        list_supported_ubuntu
        call_me ubuntu 2

        os;lB;printf '%s' "This machine is running $(Y)$OS_NAME $OS_VERSION$(lB), Codename$(GRAY) $(dY)$OS_VERSION_CODENAME$(GRAY)"
        local ver vercode2 releasedate lts ss
        local -i eos
        local -l vercode1
        case $OS_ID in
            ubuntu) ver="$OS_VERSION_ID"
            ;;
            *)  [ -n "$OS_UBUNTU_CODENAME" ]&&ver="${UBUNTU_VERSIONS[$OS_UBUNTU_CODENAME]}"
                echo ", which is"
                case $OS_ID in
                linuxmint)  os;printf '%s' "a version of Linux Mint based on $(Y)Ubuntu $ver ($OS_UBUNTU_CODENAME)$(lB)" ;;
                        *)  os;printf '%s' "a distribution based on $(Y)Ubuntu $ver ($OS_UBUNTU_CODENAME)$(lB)"
                esac
        esac
        read -r vercode1 vercode2 releasedate eos <<<${UBUNTU_VERSIONS_DATA["$ver"]//;/ }
        is_ubuntu_lts $ver&&lts="true"||lts="false"
        [[ "$(supported_suites_ ubuntu)" =~ $vercode1 ]]&&ss="true"||ss="false"

        if [ $today -le $eos ]&&$lts&&$ss;then
            lB;echo ".$(lG) Good!";N
            mark_checked supported sury ubuntu $vercode1
        elif [ $today -le $eos ]&&$lts;then
            echo ",$(lB) wich is"
            os;echo "brand new and supported by this script but there are not (yet) apt repositories"
            os;echo "provided by.Ondřej Surý. That will change in future.$(lG) Good!";N
            mark_checked supported
        elif [ $today -gt $eos ]&&$lts;then
            echo ",$(lB) wich is"
            os;echo "too old and not supported by this script  Please update your system first."
            f;os;echo "You can however continue risk free here to the detailed informations provided."
            os;echo "All other steps may work but have not been tested and therefore been deactivated.";N;f
            force=false
            ask "$(qpf)continue in $(lG)safe mode$(N) now" "$YES" && mark_checked to_old || exit1
        elif [ $today -le $eos ];then
            echo ",$(lB) wich is"
            os;echo "an interim release without long term support and not suited for server use."
            os;echo "LTS or ‘Long Term Support’ releases are published every two years in April and"
            os;echo "are the ‘enterprise grade’ releases of Ubuntu. There are no apt repositories"
            os;echo "provided by Ondřej Surý for interim releases."
            os;echo "You can however continue risk free here to the detailed informations provided."
            os;echo "All other steps may work but have not been tested and therefore been deactivated.";N;f
            force=false
            ask "$(qpf)continue in $(lG)safe mode$(N) now" "$YES" && mark_checked nolts || exit1
        else
            echo ",$(lB) wich is"
            os;echo "an interim release without long term support and not suited for server use."
            os;echo "LTS or ‘Long Term Support’ releases are published every two years in April and"
            os;echo "are the ‘enterprise grade’ releases of Ubuntu. There are no apt repositories"
            os;echo "provided by Ondřej Surý for interim releases. Additionally, support for this"
            os;echo "version has expired. Please update your system first."
            f;os;echo "You can however continue risk free here to the detailed informations provided."
            os;echo "All other steps may work but have not been tested and therefore been deactivated.";N;f
            force=false
            ask "$(qpf)continue in $(lG)safe mode$(N) now" "$YES" && mark_checked to_old nolts || exit1
        fi

    }

    [[ "$(tail -n3 "$ca_me"|head -n1)" =~ "distrib_checked" ]]||check_os_release

}

