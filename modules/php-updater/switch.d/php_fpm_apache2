__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${SWITCH_PHP_FPM_APACHE2_BASHLIB:-_} && return
SWITCH_PHP_FPM_APACHE2_BASHLIB=:

php_fpm_sites_available_conf_apache2(){
    local ver_n pool plu
    local -a pools sock_o canonicalized_sock_o conffiles
    local -A sock_n sock_regex
    ver_n="$1"

    [ -f "${F[php]:="${D[vt]}/php"}" ] && . "${F[php]}"

    mapfile -t pools< <(fpm_pools)
    if (( ${#pools[@]} == 1 )); then
        bundle echo "$(es3; ipf) This is systemwide the only fpm pool configured:"
        f
        bundle echo "$(es3; pf)${pools[0]}"
    elif (( ${#pools[@]} > 1 )); then
        f
        bundle echo "$(es3; ipf) These are systemwide the configured fpm pools:"
        f
        for pool in "${pools[@]}"; do bundle echo "$(es3; pf)$pool"; done
        f
    fi
    # we can only switch to existing pools with already created sockets for the new version
    pools=($(fpm_socket "$ver_n"))
    if (( ${#pools[@]} == 1 )); then
        bundle echo "$(es3; ipf) This is the only fpm pool configured for the version you selected:"
        f
        bundle echo "$(es3; pf)$ver_n [${pools[0]}]"
    elif (( ${#pools[@]} > 1 )); then
        bundle echo "$(es3; ipf) These are the configured fpm pools for the version you selected:"
        f
        for pool in "${pools[@]}"; do bundle echo "$(es3; pf)$ver_n [$pool]"; done
    fi

    for pool in ${pools[@]}; do
        f
        bundle echo "$(es3)Processing pool: [$pool]..."

        sock_n[$pool]="$(fpm_socket "$ver_n" "$pool")"
        sock_regex[$pool]="$(sed_ "s/${PHP[vregex]}/${PHP[vregex]}/g; s/\./\\\\./g" "${sock_n[$pool]}" '-s')"
        mapfile -t sock_o< <(
            q2 ${X[find]} ${A2CONFFILES[@]} -name "*.conf" -exec ${X[grep]} -Ehos "^[^#]*${sock_regex[$pool]}" {} + |
            ${X[grep]} -Eos "${sock_regex[$pool]}" |
#            ${X[grep]} -Ev "${ver_n//\./\\.}" | \ # this breaks check if installed
            ${X[sort]} -u
        )
        mapfile -t canonicalized_sock_o< <(canonicalize_array "${sock_o[@]}")
        mapfile -t conffiles< <(
            ${X[grep]} -Els "^[^#]*${sock_regex[$pool]}" ${A2CONFFILES[@]} |
            ${X[grep]} -E '\.conf$' |
            ${X[grep]} -Ev "$(fpm_conf_regex)" |
            ${X[sort]} -u
        )

        if (( ${#conffiles[@]} )); then
            f
            bundle echo "$(es3; ipf; format_string "The apache2 server is connected to a PHP-FPM unix-socket, bypassing the usual SetHandler configuration mechanism." 6; N)"

            if (( ${#conffiles[@]} == 1 )); then
                this='This' be='is' plu=''
            else
                this='These' be='are' plu='s'
            fi
            f

            if (( ${#canonicalized_sock_o[@]} == 1 )); then
                if [ "${canonicalized_sock_o[0]}" = "$(canonicalize ${sock_n[$pool]})" ]; then
                    bundle echo "$(es3; pf)this is the socket: $(lG)${sock_o[0]}$(N)"
                    bundle echo "$(es3; pf)and this is the configuration in detail:"; N
                    local conf_o
                    local -a sock_o_conf_files
                    mapfile -t sock_o_conf_files< <(iterate_conf_files_ a2 detect_matching_apache2_php_fpm_configfiles_ ${sock_o[0]})
                    for conf_o in "${sock_o_conf_files[@]}"; do
                        f
                        bundle printf detect_apache2_php_fpm_ tag "$conf_o"
                    done
                    unset conf_o sock_o_conf_files
                    f
                    bundle echo "$(es3; ipf; lG; format_string "It looks like everything is already configured correctly, there is nothing that have to be changed on the configuration of this fpm-pool" 6; N)"
                    f
                    anykey_noquit
                    continue
                fi
                bundle echo "$(es3; pf)this is the old socket: $(lG)${sock_o[0]}"; N
            elif (( ${#canonicalized_sock_o[@]} > 1 )); then
                bundle echo "$(es3; ipf; O; format_string "Multiple socket configurations, eg. trying to connect to more than one php-version detected. If that is intended, you may have to edit the socket configuration in the apache2 conf files by hand, because this script would simply change all of them to the new version. This behaviour may change in future versions of this script." 6; N)"
                bundle echo "$(es3; pf)these are the configurations in detail:"; N

                local -a sock_o_conf_files
                for i in ${!sock_o[@]}; do
                    mapfile -t sock_o_conf_files< <(p_nosort ${sock_o_conf_files[@]}; iterate_conf_files_ a2 detect_matching_apache2_php_fpm_configfiles_ ${sock_o[i]})
                done
                mapfile -t sock_o_conf_files< <(p_sort ${sock_o_conf_files[@]})
                for i in "${!sock_o_conf_files[@]}"; do
                    f
                    bundle printf detect_apache2_php_fpm_ tag "${sock_o_conf_files[i]}"
                done
                unset sock_o_conf_files
                f
                anykey
            fi

            bundle echo "$(es3; pf)this is the new socket: $(lG)${sock_n[$pool]}"; N
            f
            bundle echo "$(pf)$this $be the PHP-FPM socket configuration$plu:"
            for i in ${!conffiles[@]}; do
                f
                bundle printf detect_apache2_php_fpm_ tag "${conffiles[i]}"
            done
            f
#            bundle echo "$(pf; format_string "If you continue here, this script will replace $(listify Y ${sock_o[@]}) with $(Y)${sock_n[$pool]}$(N) for you." 3)"
#            f
            anykey "replace $(listify Y ${sock_o[@]}) with $(Y)${sock_n[$pool]}$(N)"
            local line conf
            for i in ${!conffiles[@]}; do
                line="$(fpm_connections_socket "${conffiles[i]}")"
                conf="$(${X[realpath]} "${conffiles[i]}")"
                sed_ "${line%%:*}s#${line##*:}#${sock_n[$pool]}#" "$conf" "--in-place=.backup"
                bundle echo "$(es3; Pbg) IMPORTANT: $(P; es; format_string "A backup-file $(C)$conf.backup$(P) was created with the previous state. Don't forget to remove that file if everything runs fine." 16; N)"
            done
            unset line conf
            f
        else
            no_conf_in_pool
        fi
    done
}
