__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${TASKS_DEPENDENCY_PKGS_BASHLIB:-_} && return
TASKS_DEPENDENCY_PKGS_BASHLIB=:

remove_dependency_packages(){
    cursor_ hide
    spinner C " . searching misconfigurations: dependency-packages ." &
    local pkg plu be modstring question
    local -a dependency_pkgs
    for pkg in $(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*php/{print $2}'); do
        if extension_is_ dependency "$pkg"; then
            rdepends -q "$pkg"||dependency_pkgs+=("$pkg")
        fi
    done
    if (( ${#dependency_pkgs[@]} )); then
        if ((${#dependency_pkgs[@]}==1)); then
            plu='is:' be='is a' modstring="$(B)${dependency_pkgs[0]}$(N)"
        else
            plu='ese:s' be='are' modstring="$(listify B ${dependency_pkgs[@]})"
        fi
        question="$(qpf; format_string "Do you want to remove the dependency package${plu#*:} $modstring now" 3)"
        kill_spinner
        bundle echo "$(xpf; format_string "There $be unnecessary $(O)dependency package${plu#*:}$(N) ($modstring) installed on this machine." 3; N)"
        echo "$(ipf; Y; format_string "Dependency packages have no other function than to install other packages with the final binaries. For example, php-apcu depends on the newest binary package, like php8.4-apcu. The downside is that this can lead to an unwanted update to a new version of that package, which can result in difficult-to-debug issues, such as internal server errors. It is strongly recommended to remove th${plu%:*} package${plu#*:} before updating, as the removal will make your system more resilient against unintended changes made without your decision." 3; N)"
        echo "$(pf; format_string "This script can remove th${plu%:*} package${plu#*:} in a safe way." 3)"
        cursor_ show
        if ask "$question" "$YES"; then
            apt_remove --yes ${dependency_pkgs[@]}
            "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
            cursor_ hide
            anykey
            return 0
        else
            echo "$(ipf; Y; format_string "You answered $(button no), nothing changed." 3; N)"
            echo "$(xpf; R; format_string "WARNING: You should absolutely know what you are doing if you do not follow the script's advice, as it may result in an unstable system and affect the script's execution down the line! I may not be able to help with subsequent errors." 3; N)"
            cursor_ hide
            anykey
            return 1
        fi
    else
        kill_spinner
        return 1
    fi
}
