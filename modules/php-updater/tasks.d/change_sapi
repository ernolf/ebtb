__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${TASKS_CHANGE_SAPI_BASHLIB:-_} && return
TASKS_CHANGE_SAPI_BASHLIB=:

change_sapi(){
    message_(){
        case "$1" in
            explain_the_diference)
                separator
                echo "- FYI: $(Y; format_string "diferences between the '$(dY)${DESCR[apache2]}$(Y)' and the '$(dY)${DESCR[fpm]}$(Y)':" 7)"
                f
                echo "$(o 6; GRAY; pf; format_string "the '$(dY)${DESCR[apache2]}$(GRAY)' integrates php as an apache2 module (package $(B)libapache2-mod-php$(GRAY)\$$(C)ver$(GRAY)) It is the default SAPI for apache2 and relies on the old but stable Multi-Processing Module (MPM) 'mpm-prefork' which is not particularly scalable and $(W)doesn't support http2" 9)"
                f
                echo "$(o 6; GRAY; pf; format_string "the '$(dY)${DESCR[fpm]}$(GRAY)' (package $(B)php$(GRAY)\$$(C)ver$(B)-fpm$(GRAY)) is a little bit more complicated to administer, it relies on the more scalable threaded MPM 'mpm-event' which $(W)supports http2" 9)"
                f
                echo "$(o 7; Y; format_string "Due to the dependency on different multi-processing modules, of which only one can be loaded into the Apache core at a time, these two SAPIs are mutually exclusive in any use case with Apache2. Although both can be installed side by side, this is not recommended, especially if php-fpm is used, as after an update the apache2 module always tries to load the mpm it needs and may render the server inaccessible" 7; N)"
                f
                echo "$(o 7; Y; format_string "Appliances based on the $(dY)nextcloud/vm$(Y) project $(GRAY)(like nextcloud-vm from HanssonIT)$(Y) require $(B)php-fpm$(Y). If you have a version of $(B)libapache2-mod php$(Y) installed on such an installation, you've already messed up steps outside of this script. In this case, use the option to $(W)completely remove libapache2-mod-php*$(Y)." 7; N)"
                separator
                ;;
            misconfiguration)
                xpf; R; echo " This is a serious misconfiguration which must be fixed."; N
                ;;
            wrong_mpm)
                echo "The apache2 server has not loaded the correct multi processing module"
                ;;
            no_switch)
                echo "so here you will not get the option to switch the SAPI to the"
                ;;
            yse)
                f
                pf; Y; echo "You should either:"; N
                f
        esac
    }

    sapi_check_apache2(){
        [ -f "${F[php]:="${D[vt]}/php"}" ] && . "${F[php]}"
        local allowed_keys
        local -A bool
        case "$active_sapi" in
            a2_ok)
                active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                if [ "$(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*php'$active_a2_version'-fpm/{print $2}')" = "php$active_a2_version-fpm" ]; then
                    bool[alt]=:
                    allowed_keys='q123'
                    read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3) or $(button q) to leave it unchanged$(N)"
                else
                    bool[alt]=_
                    allowed_keys='q1'
                    read_prompt="$(os; C)press $(button 1) or $(button q) to leave it unchanged$(N)"
                fi
                cursor_ hide
                message_ explain_the_diference
                bundle echo "$(ipf; format_string "The '$(dY)${DESCR[apache2]}$(N)' $(B)$active_a2_pkg$(N) is connected while the '$(dY)${DESCR[fpm]}$(N)' $(B)php-fpm$(N) seems not to be connected." 3)"
                ${bool[alt]} || { bundle echo "$(ipf; B; format_string "php$(dY)$active_a2_version$(B)-fpm$(N) is not installed, only $(listify B "$(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*php'${PHP[vregex]}'-fpm/{print $2}')"), $(message_ no_switch) '$(dY)${DESCR[fpm]}$(N)'." 3)"; }
                pf; Y; echo "Since php-fpm still consumes resources despite not being connected, you should either:"; N
                f
                bundle echo "$(es 10; button 1; pf)completely remove php*-fpm"
                ${bool[alt]} && {
                    f
                    bundle echo "$(es 10; button 2; pf)switch apache2 from libapache2-mod-php to php*-fpm"
                    f
                    bundle echo "$(es 10; button 3; pf)switch apache2 from libapache2-mod-php to php*-fpm and completely remove libapache2-mod-php*"
                }
                f
                bundle echo "$(es 10; button q; pf)do nothing, leave this unchanged (if you know what you are doing)"
                N
                f
                while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice 2 "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "$(fn_ln) 1 key: [$key]" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  break
                                    ;;
                                1)  f
                                    apt_ remove 'php*-fpm'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  f
                                    php_a2module_2_fpm "$active_a2_version"
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  f
                                    php_a2module_2_fpm "$active_a2_version"
    # TODO: migrate php.ini
                                    apt_ remove 'libapache2-mod-php*'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            ${X[sleep]} 2
                            te0 8
                        fi
                    fi
                done
                ;;
            a2_nok)
                active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                allowed_keys='q1234'
                read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3), $(button 4) or $(button q) to leave it unchanged$(N)"
                cursor_ hide
                message_ explain_the_diference
                bundle echo "$(ipf; format_string "It looks like the '$(dY)${DESCR[apache2]}$(N)' $(B)$active_a2_pkg$(N) is connected while the '$(dY)${DESCR[fpm]}$(N)' $(B)php-fpm$(N) seems not to be connected." 3)"
                bundle echo "$(xpf; R; format_string "$(message_ wrong_mpm) ('$(dY)prefork$(R)') required by the $(dY)${DESCR[apache2]}$(R), but the '$(dY)event$(R)' module which is required for operation with $(B)php-fpm$(R)." 3; N)"
                message_ misconfiguration
                message_ yse
                bundle echo "$(es 10; button 1; pf)switch apache2 from libapache2-mod-php to php*-fpm, without changing the loaded modules"
                f
                bundle echo "$(es 10; button 2; pf)unload mpm_event_module and load mpm_prefork_module for libapache2-mod-php to work"
                f
                bundle echo "$(es 10; button 3; pf)switch apache2 from libapache2-mod-php to php*-fpm and completely remove libapache2-mod-php*"
                f
                bundle echo "$(es 10; button 4; pf)unload mpm_event_module and load mpm_prefork_module for libapache2-mod-php and completely remove php*-fpm"
                f
                bundle echo "$(es 10; button q; pf)do nothing, leave this unchanged (if you know what you are doing)"
                N
                f
                while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice 2 "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "$(fn_ln) 2 key: [$key]" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  break
                                    ;;
                                1)  f
                                    php_a2module_2_fpm "$active_a2_version"
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  f
                                    php_fpm_2_a2module "$active_a2_version"
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  f
                                    php_a2module_2_fpm "$active_a2_version"
    # TODO: migrate php.ini
                                    apt_ remove 'libapache2-mod-php*'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                4)  f
                                    php_fpm_2_a2module "$active_a2_version"
    # TODO: migrate php.ini
                                    apt_ remove 'php*-fpm'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            ${X[sleep]} 2
                            te0 8
                        fi
                    fi
                done
                ;;
            fpm_ok)
                active_fpm_version="$(for pv in ${!SAPI_FPM[@]}; do [ "${SAPI_FPM[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_fpm_pkg="php$active_fpm_version-fpm"
                if [ "$(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*libapache2-mod-php'$active_fpm_version'/{print $2}')" = "libapache2-mod-php$active_fpm_version" ]; then
                    bool[alt]=:
                    allowed_keys='q123'
                    read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3) or $(button q) to leave it unchanged$(N)"
                else
                    bool[alt]=_
                    allowed_keys='q1'
                    read_prompt="$(os; C)press $(button 1) or $(button q) to leave it unchanged$(N)"
                fi
                cursor_ hide
                message_ explain_the_diference
                bundle echo "$(ipf; format_string "The '$(dY)${DESCR[fpm]}$(N)' $(B)$active_fpm_pkg$(N) is connected while the '$(dY)${DESCR[apache2]}$(N)' $(B)libapache2-mod-php$(N) seems to be inactive." 3)"
                ${bool[alt]} || { bundle echo "$(ipf; B; format_string "libapache2-mod-php$(dY)$active_fpm_version$(N) is not installed, only $(listify B "$(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*libapache2-mod-php'${PHP[vregex]}'/{print $2}' | ${X[sort]})"), $(message_ no_switch) '$(dY)${DESCR[apache2]}$(N)'." 3)"
                }
                message_ yse
                bundle echo "$(es 10; button 1; pf)completely remove libapache2-mod-php* (recommended)"
                ${bool[alt]} && {
                    f
                    bundle echo "$(es 10; button 2; pf)switch apache2 from php*-fpm to libapache2-mod-php"
                    f
                    bundle echo "$(es 10; button 3; pf)switch apache2 from php*-fpm to libapache2-mod-php and completely remove php*-fpm"
                }
                f
                bundle echo "$(es 10; button q; pf)do nothing, leave this unchanged (if you know what you are doing)"
                N
                f
                while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice 2 "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "$(fn_ln) 3 key: [$key]" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  break
                                    ;;
                                1)  f
                                    apt_ remove 'libapache2-mod-php*'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  f
                                    php_fpm_2_a2module $active_fpm_version
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  f
                                    php_fpm_2_a2module $active_fpm_version
    # TODO: migrate php.ini
                                    apt_ remove 'php*-fpm'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            ${X[sleep]} 2
                            te0 8
                        fi
                    fi
                done
                ;;
            fpm_nok)
                active_fpm_version="$(for pv in ${!SAPI_FPM[@]}; do [ "${SAPI_FPM[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_fpm_pkg="php$active_fpm_version-fpm"
                allowed_keys='q1234'
                read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3), $(button 4) or $(button q) to leave it unchanged$(N)"
                cursor_ hide
                message_ explain_the_diference
                bundle echo "$(ipf; format_string "It looks like the '$(dY)${DESCR[fpm]}$(N)' $(B)$active_fpm_pkg$(N) is connected while the '$(dY)${DESCR[apache2]}$(N)' $(B)libapache2-mod-php$(N) seems not to be connected." 3)"
                bundle echo "$(xpf; R; format_string "$(message_ wrong_mpm) ('$(dY)event$(R)') required by the $(dY)fpm SAPI$(R), but the '$(dY)prefork$(R)' module which is required for operation with $(B)libapache2-mod-php$(R)." 3; N)"
                message_ misconfiguration
                message_ yse
                bundle echo "$(es 10; button 1; pf)switch apache2 from php*-fpm to libapache2-mod-php, without changing the loaded modules"
                f
                bundle echo "$(es 10; button 2; pf)unload mpm_prefork_module and load mpm_event_module for php-fpm to work"
                f
                bundle echo "$(es 10; button 3; pf)switch apache2 from php*-fpm to libapache2-mod-php and completely remove php*-fpm"
                f
                bundle echo "$(es 10; button 4; pf)unload mpm_prefork_module and load mpm_event_module for php-fpm and completely remove libapache2-mod-php*"
                f
                bundle echo "$(es 10; button q; pf)do nothing, leave this unchanged (if you know what you are doing)"
                N
                f
                while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice 2 "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "$(fn_ln) 4 key: [$key]" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  break
                                    ;;
                                1)  f
                                    php_fpm_2_a2module "$active_fpm_version"
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  f
                                    php_a2module_2_fpm "$active_fpm_version"
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  f
                                    php_fpm_2_a2module "$active_fpm_version"
    # TODO: migrate php.ini
                                    apt_ remove 'php*-fpm'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                4)  f
                                    php_a2module_2_fpm "$active_fpm_version"
    # TODO: migrate php.ini
                                    apt_ remove 'libapache2-mod-php*'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            ${X[sleep]} 2
                            te0 8
                        fi
                    fi
                done
                ;;
            both_a2_ok)
                active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                active_fpm_version="$(for pv in ${!SAPI_FPM[@]}; do [ "${SAPI_FPM[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_fpm_pkg="php$active_fpm_version-fpm"
                allowed_keys='q1234'
                read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3), $(button 4) or $(button q) to leave it unchanged$(N)"
                cursor_ hide
                message_ explain_the_diference
                bundle echo "$(xpf; format_string "It looks like both, the '$(dY)${DESCR[apache2]}$(N)' $(B)$active_a2_pkg$(N) and the '$(dY)${DESCR[fpm]}$(N)' $(B)$active_fpm_pkg$(N) are connected to it." 3)"
                message_ misconfiguration
                bundle echo "$(ipf; Yi; format_string "The apache2 server has loaded the '$(dY)prefork$(Yi)' multi processing module required by the $(dY)${DESCR[apache2]}$(Yi) and the '$(dY)event$(Yi)' module which is required for operation with $(B)php-fpm$(Yi) is not loaded." 3; N)"
                message_ yse
                bundle echo "$(es 10; button 1; pf)disconnect apache2 from php*-fpm, without changing the loaded modules"
                f
                bundle echo "$(es 10; button 2; pf)disconnect apache2 from libapache2-mod-php*, unload mpm_prefork_module and load mpm_event_module for php-fpm to work"
                f
                bundle echo "$(es 10; button 3; pf)disconnect apache2 from php*-fpm and completely remove php*-fpm"
                f
                bundle echo "$(es 10; button 4; pf)disconnect apache2 from libapache2-mod-php* and completely remove libapache2-mod-php*"
                f
                bundle echo "$(es 10; button q; pf)do nothing, leave this unchanged (if you realy know what you are doing)"
                N
                f
                while :; do read -rsn 1 -p "$read_prompt " key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice 2 "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "$(fn_ln) 5 key: [$key]" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  break
                                    ;;
                                1)  f
                                    php_fpm_2_a2module $active_a2_version
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  f
                                    php_a2module_2_fpm $active_fpm_version
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  f
                                    php_fpm_2_a2module $active_a2_version
    # TODO: migrate php.ini
                                    apt_ remove 'php*-fpm'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                4)  f
                                    php_a2module_2_fpm $active_fpm_version
    # TODO: migrate php.ini
                                    apt_ remove 'libapache2-mod-php*'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            ${X[sleep]} 2
                            te0 8
                        fi
                    fi
                done
                ;;
            both_fpm_ok)
                active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                active_fpm_version="$(for pv in ${!SAPI_FPM[@]}; do [ "${SAPI_FPM[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_fpm_pkg="php$active_fpm_version-fpm"
                allowed_keys='q1234'
                read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3), $(button 4) or $(button q) to leave it unchanged$(N)"
                cursor_ hide
                message_ explain_the_diference
                bundle echo "$(xpf; format_string "It looks like both, the '$(dY)${DESCR[apache2]}$(N)' $(B)$active_a2_pkg$(N) and the '$(dY)${DESCR[fpm]}$(N)' $(B)$active_fpm_pkg$(N) are connected to it." 3)"
                message_ misconfiguration
                bundle echo "$(ipf; Yi; format_string "The apache2 server has loaded the '$(dY)event$(Yi)' multi processing module required by the $(dY)${DESCR[fpm]}$(Yi) and the '$(dY)prefork$(Yi)' module which is required for operation with $(B)libapache2-mod-php$(Yi) is not loaded." 3; N)"
                message_ yse
                bundle echo "$(es 10; button 1; pf)disconnect apache2 from libapache2-mod-php*, without changing the loaded modules"
                f
                bundle echo "$(es 10; button 2; pf)disconnect apache2 from php*-fpm, unload mpm_event_module and load mpm_prefork_module for libapache2-mod-php to work"
                f
                bundle echo "$(es 10; button 3; pf)disconnect apache2 from libapache2-mod-php* and completely remove libapache2-mod-php*"
                f
                bundle echo "$(es 10; button 4; pf)disconnect apache2 from php*-fpm and completely remove php*-fpm"
                f
                bundle echo "$(es 10; button q; pf)do nothing, leave this unchanged (if you realy know what you are doing)"
                N
                f
                while :; do read -rsn 1 -p "$read_prompt " key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice 2 "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "$(fn_ln) 6 key: [$key]" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  break
                                    ;;
                                1)  f
                                    php_a2module_2_fpm $active_fpm_version
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  f
                                    php_fpm_2_a2module $active_a2_version
    # TODO: migrate php.ini
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  f
                                    php_a2module_2_fpm $active_fpm_version
    # TODO: migrate php.ini
                                    apt_ remove 'libapache2-mod-php*'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                4)  f
                                    php_fpm_2_a2module $active_a2_version
    # TODO: migrate php.ini
                                    apt_ remove 'php*-fpm'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            ${X[sleep]} 2
                            te0 8
                        fi
                    fi
                done
                ;;
            *)  active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                allowed_keys='q12'
                read_prompt="$(os; C)press $(button 1), $(button 2) or $(button q) to leave it unchanged$(N)"
                cursor_ hide
                message_ explain_the_diference
                bundle echo "$(ipf; format_string "The apache2 webserver is installed but inactive. The '$(dY)${DESCR[apache2]}$(N)' $(B)$active_a2_pkg$(N) is configured to be connected while the '$(dY)${DESCR[fpm]}$(N)' $(B)php-fpm$(N) is listening as well." 3)"
                message_ yse
                bundle echo "$(es 10; button 1; pf)completely remove libapache2-mod-php*"
                f
                bundle echo "$(es 10; button 2; pf)completely remove php*-fpm"
                f
                bundle echo "$(es 10; button q; pf)do nothing, leave this unchanged"
                N
                f
                while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice 2 "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "$(fn_ln) 7 key: [$key]" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  break
                                    ;;
                                1)  f
                                    php_a2module_2_fpm "${PHP[v]}"
                                    apt_ remove 'libapache2-mod-php*'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  f
                                    php_fpm_2_a2module ${PHP[v]}
                                    apt_ remove 'php*-fpm'
                                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            ${X[sleep]} 2
                            te0 8
                        fi
                    fi
                done
                ;;
        esac
    }

    local active_sapi a2mpm infostring modstring modsubstring webserver active_webserver
    cursor_ hide
    spinner C " . searching misconfigurations: change SAPI ." &

    if $(is_sapi_true_ apache2) && $(is_sapi_true_ fpm); then
        separator R
        bundle echo "$(xpf; format_string "There are $(B)apache2handler$(N) and $(B)fpm$(N) SAPIs installed on this machine." 3)"
        cursor_ hide
        spinner C " . searching misconfigured SAPIs ." &

        populate_httpd_ enabled
        populate_httpd_ active
        populate_httpd_ wk_enabled
        populate_httpd_ wk_active

        if (( ${HTTPD[apache2]} )); then
            populate_a2modules shared
            if (( ${#A2MODULES[@]} )); then
                if [[ "${A2MODULES[@]%_module}" =~ prefork ]]; then
                    a2mpm='prefork'
                elif [[ "${A2MODULES[@]%_module}" =~ event ]]; then
                    a2mpm='event'
                fi
            fi
            [[ "${SAPI_A2[@]}" =~ a && "$a2mpm" == 'prefork' ]] && active_sapi='a2_ok'
            [[ "${SAPI_A2[@]}" =~ a && "$a2mpm" == 'event' ]] && active_sapi='a2_nok'

            [[ "${SAPI_FPM[@]}" =~ a && "$a2mpm" == 'prefork' && "$active_sapi" == 'a2_ok' ]] && active_sapi='both_a2_ok'
            [[ "${SAPI_FPM[@]}" =~ a && "$a2mpm" == 'event' && "$active_sapi" == 'a2_nok' ]] && active_sapi='both_fpm_ok'

            [[ "${SAPI_FPM[@]}" =~ a && "$a2mpm" == 'event' && "$active_sapi" != 'both_fpm_ok' ]] && active_sapi='fpm_ok'
            [[ "${SAPI_FPM[@]}" =~ a && "$a2mpm" == 'prefork' && "$active_sapi" != 'both_a2_ok' ]] && active_sapi='fpm_nok'
        fi

        if (( ${#HTTPD_ENABLED[@]} )); then
            if (( ${#HTTPD_ENABLED[@]} == ${#WK_HTTPD_ENABLED[@]} )); then
                if (( ${#WK_HTTPD_ENABLED[@]} == 1 )); then
                    webserver="${WK_HTTPD_ENABLED[0]}"
                    infostring="Detected httpd (webserver): $(C)$webserver$(N) (status inactive)"
                    if (( ${#WK_HTTPD_ACTIVE[@]} == 1 )); then
                        infostring="${infostring/inactive/active}"
                    fi
                elif (( ${#WK_HTTPD_ENABLED[@]} == 2 )); then
                    webserver=both
                    modstring="$(listify C ${WK_HTTPD_ENABLED[@]})"
                    infostring="Detected httpds (webservers): $modstring"
                    if (( ${#WK_HTTPD_ACTIVE[@]} == 1 )); then
                        active_webserver=${WK_HTTPD_ACTIVE[0]}
                        infostring="$infostring, but only $(C)$active_webserver$(N) seems to be active."
                    elif (( ${#WK_HTTPD_ACTIVE[@]} == 2 )); then
                        active_webserver=both
                        infostring="$infostring, and $active_webserver seem to be active."
                    fi
                fi
            elif (( ${#HTTPD_ENABLED[@]} > ${#WK_HTTPD_ENABLED[@]} )); then
                if (( ${#WK_HTTPD_ENABLED[@]} == 1 )); then
                    webserver="${WK_HTTPD_ENABLED[0]}"
                    modstring="$(listify C ${HTTPD_ENABLED[@]})"
                    infostring="Detected httpds (webservers): $modstring. httpd with importance for this script: $(C)$webserver$(N) (status inactive)"
                    if (( ${#WK_HTTPD_ACTIVE[@]} == 1 )); then
                        infostring="${infostring/inactive/active}"
                    fi
                elif (( ${#WK_HTTPD_ENABLED[@]} == 2 )); then
                    webserver=both
                    modstring="$(listify C ${HTTPD_ENABLED[@]})"
                    modsubstring="$(listify C ${WK_HTTPD_ENABLED[@]})"
                    infostring="Detected httpds (webservers): $modstring. httpds with importance for this script: $modsubstring"
                    if (( ${#WK_HTTPD_ACTIVE[@]} == 1 )); then
                        active_webserver=${WK_HTTPD_ACTIVE[0]}
                        infostring="$infostring, but only $(C)$active_webserver$(N) seems to be active."
                    elif (( ${#WK_HTTPD_ACTIVE[@]} == 2 )); then
                        active_webserver=both
                        infostring="$infostring, and $active_webserver seem to be active."
                    fi
                fi
            fi
        fi
        bundle echo "$(ipf; format_string "$infostring" 3)"
        case $webserver in
            both)
                bundle echo "$(es3; format_string "Your usecase looks complex, because of multiple installed webservers. If you know exactly what you are doing and everything is working well, you can leave this unchanged." 3)"
                case $active_webserver in
                    apache2)
                        bundle echo "$(es3; format_string "However, since only apache2 seems to be active and nginx is not, you should consider uninstalling nginx if you are not using it. After you have done that, you should run this script again to check the configuration for the new use case." 3)"
                        ;;
                    nginx)
                        bundle echo "$(es3; format_string "However, since only nginx seems to be active and apache2 is not, you should consider uninstalling apache2 if you are not using it. After you have done that, you should run this script again to check the configuration for the new use case." 3)"
                        ;;
                    both)
                        bundle echo "$(es3; format_string "However, if you are not using one of the two webservers apache2 or nginx, you should consider uninstalling the not used one. After you have done that, you should run this script again to check the configuration for the new use case." 3)"
                        ;;
                    *)  :
                esac
                f; anykey
                return 0
                ;;
            apache2)
                sapi_check_apache2
                ;;
            nginx)
                pf; N; echo "Consider removing the apache2-mod-php SAPI (recommended)"; N
                cursor_ show
                if ask "$(qpf)Do you want to remove (purge) apache2-mod-php now" "$YES"; then
                    apt_ purge 'libapache2-mod-php*'
                    "$ME${FLAG[forceflag]}" "json=${J[o]}" --list-installed-only
                    cursor_ hide
                    anykey
                    return 0
                fi
                ;;
            *)  :
        esac
        return 1
    else
        return 1
    fi
}
