__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${TASKS_CHANGE_SAPI_BASHLIB:-_} && return
TASKS_CHANGE_SAPI_BASHLIB=:

explain_the_diference(){
    separator
    echo "- FYI:$(Y; format_string "diferences between '$(dY)apache2handler SAPI$(Y)' and '$(dY)fast process manager SAPI$(Y)':" 3)"
    echo "$(o4; GRAY; format_string "- the '$(dY)apache2handler SAPI$(GRAY)' integrates php as an apache2 module (package $(B)libapache2-mod-php$(GRAY)\$$(C)ver$(GRAY)) It is the default SAPI for apache2 and relies on the old but stable Multi-Processing Module (MPM) 'mpm-prefork' which is not particularly scalable and $(W)doesn't support http2" 7)"
    echo "$(o4; GRAY; format_string "- the '$(dY)fast process manager SAPI$(GRAY)' (package $(B)php$(GRAY)\$$(C)ver$(B)-fpm$(GRAY)) is a little bit more complicated to administer, it relies on the more scalable threaded MPM 'mpm-event' which $(W)supports http2" 7)"
    separator
}

change_sapi(){
    sapi_check_apache2(){
        local allowed_keys
        local -A bool
        case "$active_sapi" in
            a2_ok)
                active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                if [ "$(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*php'$active_a2_version'-fpm/{print $2}')" = "php$active_a2_version-fpm" ]; then
                    bool[alt]=:
                    allowed_keys='q123'
                    read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3) or $(button q) to leave it unchanged$(N)"
                else
                    bool[alt]=_
                    allowed_keys='q1'
                    read_prompt="$(os; C)press $(button 1) or $(button q) to leave it unchanged$(N)"
                fi
                kill_spinner
                explain_the_diference
                bundle echo "$(ipf; format_string "The '$(dY)apache2handler SAPI$(N)' $(B)$active_a2_pkg$(N) is connected while the '$(dY)fast process manager SAPI$(N)' $(B)php-fpm$(N) seems not to be connected. These two SAPIs are mutually exclusive in this usecase." 3)"
                ${bool[alt]} || { bundle echo "$(ipf; format_string "$(B)php$(dY)$active_a2_version$(B)-fpm$(N) is not installed, only $(listify B "$(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*'$PHPVREGEX'-fpm/{print $2}')"), so here you will not get the option to switch the SAPI to the '$(dY)fast process manager SAPI$(N)'." 3)"; }
                pf; Y; echo "Since php-fpm still consumes resources despite not being connected, you should either:"
                f; o 10; bundle echo "$(button 1) - completely remove php*-fpm"
                ${bool[alt]} && {
                    f; o 10; bundle echo "$(button 2) - switch apache2 from libapache2-mod-php to php*-fpm"
                    f; o 10; bundle echo "$(button 3) - switch apache2 from libapache2-mod-php to php*-fpm and completely remove libapache2-mod-php*"
                }
                f; o 10; bundle echo "$(button q) - do nothing, leave this unchanged (if you know what you are doing)"
                cursor_ hide
                N; f; while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "key: $key" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  cursor_ show
                                    separator
                                    break
                                    ;;
                                1)  cursor_ show
                                    f
                                    apt_remove 'php*-fpm'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  cursor_ show
                                    f
                                    php_a2module_2_fpm "$active_a2_version"
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  cursor_ show
                                    f
                                    php_a2module_2_fpm "$active_a2_version"
    # TODO: migrate php.ini
                                    apt_remove 'libapache2-mod-php*'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            sleep 2
                            te0 8
                        fi
                    fi
                done
                ;;
            a2_nok)
                active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                allowed_keys='q1234'
                read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3), $(button 4) or $(button q) to leave it unchanged$(N)"
                kill_spinner
                explain_the_diference
                bundle echo "$(ipf; format_string "It looks like the '$(dY)apache2handler SAPI$(N)' $(B)$active_a2_pkg$(N) is connected while the '$(dY)fast process manager SAPI$(N)' $(B)php-fpm$(N) seems not to be connected. These two SAPIs are mutually exclusive in this usecase." 3)"
                bundle echo "$(xpf; R; format_string "The apache2 server has not loaded the correct multi processing module ('$(dY)prefork$(R)') for the $(dY)apache2handler SAPI$(R), but the '$(dY)event$(R)' module which is intended for operation with $(B)php-fpm$(R). This is a serious misconfiguration which must be fixed." 3; N)"
                pf; Y; echo "You should either:"
                f; o 10; bundle echo "$(button 1) - switch apache2 from libapache2-mod-php to php*-fpm, without changing the loaded modules"
                f; o 10; bundle echo "$(button 2) - unload mpm_event_module and load mpm_prefork_module for libapache2-mod-php to work"
                f; o 10; bundle echo "$(button 3) - switch apache2 from libapache2-mod-php to php*-fpm and completely remove libapache2-mod-php*"
                f; o 10; bundle echo "$(button 4) - unload mpm_event_module and load mpm_prefork_module for libapache2-mod-php and completely remove php*-fpm"
                f; o 10; bundle echo "$(button q) - do nothing, leave this unchanged (if you know what you are doing)"
                cursor_ hide
                N; f; while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "key: $key" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  cursor_ show
                                    separator
                                    break
                                    ;;
                                1)  cursor_ show
                                    f
                                    php_a2module_2_fpm "$active_a2_version"
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  cursor_ show
                                    f
                                    php_fpm_2_a2module "$active_a2_version"
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  cursor_ show
                                    f
                                    php_a2module_2_fpm "$active_a2_version"
    # TODO: migrate php.ini
                                    apt_remove 'libapache2-mod-php*'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                4)  cursor_ show
                                    f
                                    php_fpm_2_a2module "$active_a2_version"
    # TODO: migrate php.ini
                                    apt_remove 'php*-fpm'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            sleep 2
                            te0 8
                        fi
                    fi
                done
                ;;
            fpm_ok)
                active_fpm_version="$(for pv in ${!SAPI_FPM[@]}; do [ "${SAPI_FPM[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_fpm_pkg="php$active_fpm_version-fpm"
                if [ "$(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*libapache2-mod-php'$active_fpm_version'/{print $2}')" = "libapache2-mod-php$active_fpm_version" ]; then
                    bool[alt]=:
                    allowed_keys='q123'
                    read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3) or $(button q) to leave it unchanged$(N)"
                else
                    bool[alt]=_
                    allowed_keys='q1'
                    read_prompt="$(os; C)press $(button 1) or $(button q) to leave it unchanged$(N)"
                fi
                kill_spinner
                explain_the_diference
                bundle echo "$(ipf; format_string "The '$(dY)fast process manager SAPI$(N)' $(B)$active_fpm_pkg$(N) is connected while the '$(dY)apache2handler SAPI$(N)' $(B)libapache2-mod-php$(N) seems to be inactive. These two SAPIs are mutually exclusive in this usecase." 3)"
                ${bool[alt]} || { bundle echo "$(ipf; format_string "$(B)libapache2-mod-php$(dY)$active_fpm_version$(N) is not installed, only $(listify B "$(${X[dpkg]} -l | ${X[gawk]} '/^[hiu]i.*libapache2-mod-'$PHPVREGEX'/{print $2}'|sort)"), so here you will not get the option to switch the SAPI to the '$(dY)apache2handler SAPI$(N)'." 3)"
                }
                pf; Y; echo "You should either:"
                f; o 10; bundle echo "$(button 1) - completely remove libapache2-mod-php* (recommended)"
                ${bool[alt]} && {
                    f; o 10; bundle echo "$(button 2) - switch apache2 from php*-fpm to libapache2-mod-php"
                    f; o 10; bundle echo "$(button 3) - switch apache2 from php*-fpm to libapache2-mod-php and completely remove php*-fpm"
                }
                f; o 10; bundle echo "$(button q) - do nothing, leave this unchanged (if you know what you are doing)"
                cursor_ hide
                N; f; while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "key: $key" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  cursor_ show
                                    separator
                                    break
                                    ;;
                                1)  cursor_ show
                                    f
                                    apt_remove 'libapache2-mod-php*'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  cursor_ show
                                    f
                                    php_fpm_2_a2module $active_fpm_version
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  cursor_ show
                                    f
                                    php_fpm_2_a2module $active_fpm_version
    # TODO: migrate php.ini
                                    apt_remove 'php*-fpm'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            sleep 2
                            te0 8
                        fi
                    fi
                done
                ;;
            fpm_nok)
                active_fpm_version="$(for pv in ${!SAPI_FPM[@]}; do [ "${SAPI_FPM[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_fpm_pkg="php$active_fpm_version-fpm"
                allowed_keys='q1234'
                read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3), $(button 4) or $(button q) to leave it unchanged$(N)"
                kill_spinner
                explain_the_diference
                bundle echo "$(ipf; format_string "It looks like the '$(dY)fast process manager SAPI$(N)' $(B)$active_fpm_pkg$(N) is connected while the '$(dY)apache2handler SAPI$(N)' $(B)libapache2-mod-php$(N) seems not to be connected. These two SAPIs are mutually exclusive in this usecase." 3)"
                bundle echo "$(xpf; R; format_string "The apache2 server has not loaded the correct multi processing module ('$(dY)event$(R)') for the $(dY)fpm SAPI$(R), but the '$(dY)prefork$(R)' module which is intended for operation with $(B)libapache2-mod-php$(R). This is a serious misconfiguration which must be fixed." 3; N)"
                pf; Y; echo "You should either:"
                f; o 10; bundle echo "$(button 1) - switch apache2 from php*-fpm to libapache2-mod-php, without changing the loaded modules"
                f; o 10; bundle echo "$(button 2) - unload mpm_prefork_module and load mpm_event_module for php-fpm to work"
                f; o 10; bundle echo "$(button 3) - switch apache2 from php*-fpm to libapache2-mod-php and completely remove php*-fpm"
                f; o 10; bundle echo "$(button 4) - unload mpm_prefork_module and load mpm_event_module for php-fpm and completely remove libapache2-mod-php*"
                f; o 10; bundle echo "$(button q) - do nothing, leave this unchanged (if you know what you are doing)"
                cursor_ hide
                N; f; while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "key: $key" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  cursor_ show
                                    separator
                                    break
                                    ;;
                                1)  cursor_ show
                                    f
                                    php_fpm_2_a2module "$active_fpm_version"
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  cursor_ show
                                    f
                                    php_a2module_2_fpm "$active_fpm_version"
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  cursor_ show
                                    f
                                    php_fpm_2_a2module "$active_fpm_version"
    # TODO: migrate php.ini
                                    apt_remove 'php*-fpm'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                4)  cursor_ show
                                    f
                                    php_a2module_2_fpm "$active_fpm_version"
    # TODO: migrate php.ini
                                    apt_remove 'libapache2-mod-php*'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            sleep 2
                            te0 8
                        fi
                    fi
                done
                ;;
            both_a2_ok)
                active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                active_fpm_version="$(for pv in ${!SAPI_FPM[@]}; do [ "${SAPI_FPM[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_fpm_pkg="php$active_fpm_version-fpm"
                allowed_keys='q1234'
                read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3), $(button 4) or $(button q) to leave it unchanged$(N)"
                kill_spinner
                explain_the_diference
                bundle echo "$(xpf; format_string "It looks like both, the '$(dY)apache2handler SAPI$(N)' $(B)$active_a2_pkg$(N) and the '$(dY)fast process manager SAPI$(N)' $(B)$active_fpm_pkg$(N) are connected to it. These two SAPIs are mutually exclusive in this usecase. $(R)This is a serious misconfiguration that needs to be fixed$(N)." 3)"
                bundle echo "$(ipf; Yi; format_string "The apache2 server has loaded the '$(dY)prefork$(Yi)' multi processing module for the $(dY)apache2handler SAPI$(Yi) and the '$(dY)event$(Yi)' module which is intended for operation with $(B)php-fpm$(Yi) is not loaded." 3; N)"
                pf; Y; echo "You should either:"
                f; o 10; bundle echo "$(button 1) - disconnect apache2 from php*-fpm, without changing the loaded modules"
                f; o 10; bundle echo "$(button 2) - disconnect apache2 from libapache2-mod-php*, unload mpm_prefork_module and load mpm_event_module for php-fpm to work"
                f; o 10; bundle echo "$(button 3) - disconnect apache2 from php*-fpm and completely remove php*-fpm"
                f; o 10; bundle echo "$(button 4) - disconnect apache2 from libapache2-mod-php* and completely remove libapache2-mod-php*"
                f; o 10; bundle echo "$(button q) - do nothing, leave this unchanged (if you realy know what you are doing)"
                cursor_ hide
                N; f; while :; do read -rsn 1 -p "$read_prompt " key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "key: $key" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  cursor_ show
                                    separator
                                    break
                                    ;;
                                1)  cursor_ show
                                    f
                                    php_fpm_2_a2module $active_a2_version
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  cursor_ show
                                    f
                                    php_a2module_2_fpm $active_fpm_version
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  cursor_ show
                                    f
                                    php_fpm_2_a2module $active_a2_version
    # TODO: migrate php.ini
                                    apt_remove 'php*-fpm'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                4)  cursor_ show
                                    f
                                    php_a2module_2_fpm $active_fpm_version
    # TODO: migrate php.ini
                                    apt_remove 'libapache2-mod-php*'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            sleep 2
                            te0 8
                        fi
                    fi
                done
                ;;
            both_fpm_ok)
                active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                active_fpm_version="$(for pv in ${!SAPI_FPM[@]}; do [ "${SAPI_FPM[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_fpm_pkg="php$active_fpm_version-fpm"
                allowed_keys='q1234'
                read_prompt="$(os; C)press $(button 1), $(button 2), $(button 3), $(button 4) or $(button q) to leave it unchanged$(N)"
                kill_spinner
                explain_the_diference
                bundle echo "$(xpf; format_string "It looks like both, the '$(dY)apache2handler SAPI$(N)' $(B)$active_a2_pkg$(N) and the '$(dY)fast process manager SAPI$(N)' $(B)$active_fpm_pkg$(N) are connected to it. These two SAPIs are mutually exclusive in this usecase. $(R)This is a serious misconfiguration that needs to be fixed$(N)." 3)"
                bundle echo "$(ipf; Yi; format_string "The apache2 server has loaded the '$(dY)event$(Yi)' multi processing module for the $(dY)fast process manager SAPI$(Yi) and the '$(dY)prefork$(Yi)' module which is intended for operation with $(B)libapache2-mod-php$(Yi) is not loaded." 3; N)"
                pf; Y; echo "You should either:"
                f; o 10; bundle echo "$(button 1) - disconnect apache2 from libapache2-mod-php*, without changing the loaded modules"
                f; o 10; bundle echo "$(button 2) - disconnect apache2 from php*-fpm, unload mpm_event_module and load mpm_prefork_module for libapache2-mod-php to work"
                f; o 10; bundle echo "$(button 3) - disconnect apache2 from libapache2-mod-php* and completely remove libapache2-mod-php*"
                f; o 10; bundle echo "$(button 4) - disconnect apache2 from php*-fpm and completely remove php*-fpm"
                f; o 10; bundle echo "$(button q) - do nothing, leave this unchanged (if you realy know what you are doing)"
                cursor_ hide
                N; f; while :; do read -rsn 1 -p "$read_prompt " key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "key: $key" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  cursor_ show
                                    separator
                                    break
                                    ;;
                                1)  cursor_ show
                                    f
                                    php_a2module_2_fpm $active_fpm_version
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  cursor_ show
                                    f
                                    php_fpm_2_a2module $active_a2_version
    # TODO: migrate php.ini
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                3)  cursor_ show
                                    f
                                    php_a2module_2_fpm $active_fpm_version
    # TODO: migrate php.ini
                                    apt_remove 'libapache2-mod-php*'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                4)  cursor_ show
                                    f
                                    php_fpm_2_a2module $active_a2_version
    # TODO: migrate php.ini
                                    apt_remove 'php*-fpm'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            sleep 2
                            te0 8
                        fi
                    fi
                done
                ;;
            *)  active_a2_version="$(for pv in ${!SAPI_A2[@]}; do [ "${SAPI_A2[$pv]}" = 'a' ] && break; done; echo "$pv")"
                active_a2_pkg="libapache2-mod-php$active_a2_version"
                allowed_keys='q12'
                read_prompt="$(os; C)press $(button 1), $(button 2) or $(button q) to leave it unchanged$(N)"
                kill_spinner
                explain_the_diference
                bundle echo "$(ipf; format_string "The apache2 webserver is installed but inactive. The '$(dY)apache2handler SAPI$(N)' $(B)$active_a2_pkg$(N) is configured to be connected while the '$(dY)fast process manager SAPI$(N)' $(B)php-fpm$(N) is listening as well. These two SAPIs are mutually exclusive in any usecase with apache2." 3)"
                pf; Y; echo "You should either:"
                f; o 10; bundle echo "$(button 1) - completely remove libapache2-mod-php*"
                f; o 10; bundle echo "$(button 2) - completely remove php*-fpm"
                f; o 10; bundle echo "$(button q) - do nothing, leave this unchanged"
                cursor_ hide
                N; f; while :; do read -rsn 1 -p "$read_prompt" key
                    if [[ "$allowed_keys" =~ $key ]]; then
                        if confirm_choice "$key" "You selected option $(button $key) Is this correct?"; then
                            mh "key: $key" &
                            echo "Confirmed choice $(button $key)"
                            case $key in
                                q)  cursor_ show
                                    separator
                                    break
                                    ;;
                                1)  cursor_ show
                                    f
                                    php_a2module_2_fpm "$PHP_VERSION"
                                    apt_remove 'libapache2-mod-php*'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                                    ;;
                                2)  cursor_ show
                                    f
                                    php_fpm_2_a2module $PHP_VERSION
                                    apt_remove 'php*-fpm'
                                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                                    anykey
                                    return 0
                            esac
                        else
                            echo -e "\n\tChoice $(button $key) cancelled\n"
                            sleep 2
                            te0 8
                        fi
                    fi
                done
                ;;
        esac
    }

    local active_sapi a2mpm infostring modstring modsubstring webserver active_webserver
    spinner C " . searching misconfigurations: change SAPI ." &

    if $(is_sapi_true_ apache2) && $(is_sapi_true_ fpm); then
        kill_spinner
        bundle echo "$(xpf; format_string "There are $(B)apache2handler$(N) and $(B)fpm$(N) SAPIs installed on this machine." 3)"
        spinner C " . searching misconfigured SAPIs ." &

        populate_httpd_ enabled
        populate_httpd_ active
        populate_httpd_ wk_enabled
        populate_httpd_ wk_active

        if (( ${HTTPD[apache2]} )); then
            populate_a2modules shared
            if (( ${#A2MODULES[@]} )); then
                if [[ "${A2MODULES[@]%_module}" =~ prefork ]]; then
                    a2mpm='prefork'
                elif [[ "${A2MODULES[@]%_module}" =~ event ]]; then
                    a2mpm='event'
                fi
            fi
            [[ "${SAPI_A2[@]}" =~ a && "$a2mpm" == 'prefork' ]] && active_sapi='a2_ok'
            [[ "${SAPI_A2[@]}" =~ a && "$a2mpm" == 'event' ]] && active_sapi='a2_nok'

            [[ "${SAPI_FPM[@]}" =~ a && "$a2mpm" == 'prefork' && "$active_sapi" == 'a2_ok' ]] && active_sapi='both_a2_ok'
            [[ "${SAPI_FPM[@]}" =~ a && "$a2mpm" == 'event' && "$active_sapi" == 'a2_nok' ]] && active_sapi='both_fpm_ok'

            [[ "${SAPI_FPM[@]}" =~ a && "$a2mpm" == 'event' && "$active_sapi" != 'both_fpm_ok' ]] && active_sapi='fpm_ok'
            [[ "${SAPI_FPM[@]}" =~ a && "$a2mpm" == 'prefork' && "$active_sapi" != 'both_a2_ok' ]] && active_sapi='fpm_nok'
        fi

        if (( ${#HTTPD_ENABLED[@]} )); then
            if (( ${#HTTPD_ENABLED[@]} == ${#WK_HTTPD_ENABLED[@]} )); then
                if (( ${#WK_HTTPD_ENABLED[@]} == 1 )); then
                    webserver="${WK_HTTPD_ENABLED[0]}"
                    infostring="Detected httpd (webserver): $(C)$webserver$(N) (status inactive)"
                    if (( ${#WK_HTTPD_ACTIVE[@]} == 1 )); then
                        infostring="${infostring/inactive/active}"
                    fi
                elif (( ${#WK_HTTPD_ENABLED[@]} == 2 )); then
                    webserver=both
                    modstring="$(listify C ${WK_HTTPD_ENABLED[@]})"
                    infostring="Detected httpds (webservers): $modstring"
                    if (( ${#WK_HTTPD_ACTIVE[@]} == 1 )); then
                        active_webserver=${WK_HTTPD_ACTIVE[0]}
                        infostring="$infostring, but only $(C)$active_webserver$(N) seems to be active."
                    elif (( ${#WK_HTTPD_ACTIVE[@]} == 2 )); then
                        active_webserver=both
                        infostring="$infostring, and $active_webserver seem to be active."
                    fi
                fi
            elif (( ${#HTTPD_ENABLED[@]} > ${#WK_HTTPD_ENABLED[@]} )); then
                if (( ${#WK_HTTPD_ENABLED[@]} == 1 )); then
                    webserver="${WK_HTTPD_ENABLED[0]}"
                    modstring="$(listify C ${HTTPD_ENABLED[@]})"
                    infostring="Detected httpds (webservers): $modstring. httpd with importance for this script: $(C)$webserver$(N) (status inactive)"
                    if (( ${#WK_HTTPD_ACTIVE[@]} == 1 )); then
                        infostring="${infostring/inactive/active}"
                    fi
                elif (( ${#WK_HTTPD_ENABLED[@]} == 2 )); then
                    webserver=both
                    modstring="$(listify C ${HTTPD_ENABLED[@]})"
                    modsubstring="$(listify C ${WK_HTTPD_ENABLED[@]})"
                    infostring="Detected httpds (webservers): $modstring. httpds with importance for this script: $modsubstring"
                    if (( ${#WK_HTTPD_ACTIVE[@]} == 1 )); then
                        active_webserver=${WK_HTTPD_ACTIVE[0]}
                        infostring="$infostring, but only $(C)$active_webserver$(N) seems to be active."
                    elif (( ${#WK_HTTPD_ACTIVE[@]} == 2 )); then
                        active_webserver=both
                        infostring="$infostring, and $active_webserver seem to be active."
                    fi
                fi
            fi
        fi
        kill_spinner
        bundle echo "$(ipf; format_string "$infostring" 3)"
        case $webserver in
            both)
                bundle echo "  $(format_string "Your usecase looks complex, because of multiple installed webservers. If you know exactly what you are doing and everything is working well, you can leave this unchanged." 3)"
                case $active_webserver in
                    apache2)
                        bundle echo "  $(format_string "However, since only apache2 seems to be active and nginx is not, you should consider uninstalling nginx if you are not using it. After you have done that, you should run this script again to check the configuration for the new use case." 3)"
                        ;;
                    nginx)
                        bundle echo "  $(format_string "However, since only nginx seems to be active and apache2 is not, you should consider uninstalling apache2 if you are not using it. After you have done that, you should run this script again to check the configuration for the new use case." 3)"
                        ;;
                    both)
                        bundle echo "  $(format_string "However, if you are not using one of the two webservers apache2 or nginx, you should consider uninstalling the not used one. After you have done that, you should run this script again to check the configuration for the new use case." 3)"
                        ;;
                    *)  :
                esac
                f; anykey
                return 0
                ;;
            apache2)
                sapi_check_apache2
                ;;
            nginx)
                pf; N; echo "Consider removing the apache2-mod-php SAPI (recommended)"; N
                if ask "$(qpf)Do you want to remove (purge) apache2-mod-php now" "$YES"; then
                    apt_purge 'libapache2-mod-php*'
                    "$me${FLAG[forceflag]}" "json=$my_json" --list-installed-only
                    anykey
                    return 0
                fi
                ;;
            *)  :
        esac
        return 1
    else
        return 1
    fi
}
