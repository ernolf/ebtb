__bashlib__
__path_and_modulename__
__version_and_datestring__
#
__copyright__
#
__license__
#

${DEPENDENCY_BASHLIB:-false} && return 0 || {
    DEPENDENCY_BASHLIB=:

    . <(require ansi)
    . <(require exit)
    . <(require array)
    . <(require sudo)

    dependency_check(){
        # for backwards compatibility:
        if (( ${#deps[@]} )) && ! (( ${#dependencies[@]} )); then
            local -a dependencies=("${deps[@]}")
        fi

        local dependency bin plu pkg
        local -a mis
        local -i c2=18 c3=34
        for dependency in ${dependencies[@]%%#*}; do
            if ! which $dependency >/dev/null; then
                dpkg -l | grep -qs "^[hiu]i.*\s$(a_fld dependencies '#' "$dependency" 2)\s"||mis+=("$dependency")
            fi
        done
        if (( ${#mis[@]} )); then
            (( ${#mis[@]}==1 )) && plu="y:" pkg="package" || plu="ies:" pkg="packages"
            f
            o2;R;echo "Dependency not met!"
            f
            o2;B;echo "missing dependenc$plu"
            line '=' P 2/78
            o2;B;echo "Bynary$(o $c2)Package$(o $c3)Description"
            line '-' dP 2/78
            Y;for bin in ${mis[@]}; do
                o2;echo "$bin$(o $c2)$(a_fld dependencies '#' "$bin" 2)$(o $c3)$(a_fld dependencies '#' "$bin" 3)"
            done
            line '-' dP 2/78 a2
            if which apt-get >/dev/null; then
                local install="install$(for bin in ${mis[@]}; do printf " $(a_fld dependencies '#' "$bin" 2)"; done)"
                . <(require ask)
                mh "$install" &
                if ask "$(qpf)Do you want to install this $pkg now"  $YES; then
                    if (( $(id -u) )); then
                        if su_do "u=root" "r=true" "p=to install this $pkg" "run=apt-get" "arg=-y $install"; then
                            if [[ "$install" =~ apt-file ]]; then
                                apt-file update
                            fi
                            sudo $me "json=$my_json" $my_args
                            exit 0
                        else
                            o2;R;echo "looks like something went wrong."
                            exit1
                        fi
                    else
                        if apt-get -y $install; then
                            if [[ "$install" =~ apt-file ]]; then
                                apt-file update
                            fi
                        else
                            o2;R;echo "looks like something went wrong."
                            exit1
                        fi
                    fi
                else
                    line '-' dP 2/78 b1 a2
                    o2;B;echo "please install first";N
                    f 2
                    exit1
                fi
            else
                line '-' dP 2/78 b1 a2
                o2;B;echo "please install first";N
                f 2
                exit1
            fi
        fi
    }

}
