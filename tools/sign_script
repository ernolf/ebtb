#!/bin/bash

# whoami, whereami
# b=basename m=me a=absolute p=path ca=canonical
declare bm apm me ca_me ca_dir
bm="$(basename "$0")";apm="$(cd "$(dirname "$0")"&&pwd)/$bm"
[ "$(which "$bm")" = "$apm" ]&&me="$bm"||me="$apm"
ca_me="$(readlink -e "$apm")";ca_dir="$(dirname "$ca_me")"

cd "$ca_dir/.."

source config/secrets
source <(tail -n +10 modules/anykey)

occ(){
    sudo -u $HT_USER -E /usr/bin/php -f "$NC_DIR/occ" "$@"
}

epoch_(){
    awk '/^# version 20/ {print $NF}' "$1"
}

sign_(){
    local script scriptname target hash
    local -i size epoch

    script="$1"
    scriptname="$(basename "$script")"
    target="$DATA_DIR/$target_dir/$scriptname"

    # first strip old signatures before signing
    echo "    strip old signature"
    sed -i -n '/^-----BEGIN PGP SIGNATURE-----$/q;p' "$script"
    sed -i -n '/^\(v\|verified\)=\(true\|false\)$/q;p' "$script"

    # sign script
    gpg --yes --default-key $OpenPGP_Key --armor --detach-sign "$script"

    # add "verified" flag for integrity test
    echo "    add 'v=false' flag for integrity test"
    echo "v=false" >> "$script.asc"

    # calculate hash
    echo "    calculate and add sha256sum"
    hash=$(sha256sum "$script" | awk '{printf $1}')
    echo "# sha256sum: $hash" >> "$script.asc"

    # append signature and hash
    echo "    append new signature"
    cat "$script.asc" >> "$script" && rm "$script.asc"

    # calculate size and (new) hash before copying to target
    epoch=$(epoch_ "$script")
    size=$(stat -c%s  "$script")
    hash=$(sha256sum "$script" | awk '{printf $1}')

    # copy file to target
    echo "    copy '$script' to '$target.sh'"
    cp "$script" "$target.sh"

    # create json object
    echo "    create json object '$target.json'"
    jq -n --compact-output --arg scriptname "$scriptname" --arg epoch "$epoch" --arg size "$size" --arg hash "$hash" \
      '{ scriptname: $scriptname, epoch: $epoch, size: $size, hash: $hash }' > "$target.json"

}

scan_(){
    chown -R $HT_USER:$HT_USER "$DATA_DIR/$target_dir"
    occ files:scan --path="$target_dir"
}

(($#))&&{
    echo "  signing this scripts"
    echo "  - $@"
    anykey
}||{
    echo "  no scripts past to sign"
    exit 1
}

for script2sign in "$@"; do
    sign_ "$script2sign"
done

echo "  scan files"
scan_

exit 0

